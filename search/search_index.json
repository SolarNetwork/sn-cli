{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SolarNetwork CLI","text":"<p>This handbook provides guides and reference documentation for the SolarNetwork command line interface (CLI) tool, <code>s10k</code>. This is a command oriented tool where each command supports its own set of options, along with some global options.</p> <p>Here is an example of running <code>s10k</code> to display the metadata associated with a SolarNode, using the <code>nodes meta list</code> command:</p> <pre><code>s10k nodes meta list --node-id 101\n\nProperty Value\n------------------------------------\nnodeId   101\ncreated  2025-08-28T23:22:00.237150Z\nupdated  2025-08-28T23:22:00.237150Z\n{\n  \"pm\" : {\n    \"os\" : {\n      \"arch\" : \"aarch64\",\n      \"name\" : \"Linux\",\n      \"version\" : \"6.1.21-v8+\"\n    }\n  }\n}\n</code></pre>"},{"location":"global-options/","title":"Global options","text":"<p>Some \"global\" options are available irrespective of the command you are running. They must be provided before the command and any subsequent command-specific options. The following global options are supported:</p> Option Long Version Description <code>-h</code> <code>--help</code> Display help information <code>-P</code> <code>--profile</code> Select a profile to use <code>--http-trace</code> Enable HTTP exchange trace logging. Must also configure the <code>net.solarnetwork.http.REQ</code> and/or <code>net.solarnetwork.http.RES</code> logger levels to <code>TRACE</code>. <code>-v</code> <code>--verbose</code> Increase verbosity of output. Can specify multiple times to increase verbosity even more."},{"location":"install/","title":"Install","text":"<p>Download the latest release from Github. Download the appropriate binary archive for your system, if available.</p> Linux (arm64)Linux (x64)macOS (Apple Silicon)Windows (x64) <p>Download the zip archive named like <code>s10k-X.Y.Z_Linux-arm64.zip</code>. Use <code>unzip</code> to expand the archive, and then move the extracted <code>s10k</code> application somewhere on your <code>PATH</code> like <code>/usr/local/bin</code>.</p> <p>Download the zip archive named like <code>s10k-X.Y.Z_Linux-x64.zip</code>. Use <code>unzip</code> to expand the archive, and then move the extracted <code>s10k</code> application somewhere on your <code>PATH</code> like <code>/usr/local/bin</code>.</p> <p>Download the zip archive named like <code>s10k-X.Y.Z_macOS-arm64.zip</code>. Double-click to expand the archive, or use <code>unzip</code>, and then move the extracted <code>s10k</code> application somewhere on your <code>PATH</code> like <code>/usr/local/bin</code>.</p> <p>Download the zip archive named like <code>s10k-X.Y.Z_Win-x64.zip</code>. Expand the archive, and then move the extracted <code>s10k</code> application somewhere on your <code>PATH</code>.</p> <p>If a binary is not available for your system, you can download the Java JAR, which requires you to have Java 21+ installed.</p> Java JAR <p>Download the JAR file named like <code>s10k-X.Y.Z.jar</code>. You can execute this using <code>java -jar s10k-X.Y.Z.jar</code> (followed by the command and options).</p>"},{"location":"logging/","title":"Logging","text":"<p>Debug logging can be enabled by creating an <code>application.yml</code> file in your working directory. You can then configure standard Spring Boot Logging settings. For example if you would like HTTP exchange traces, use the <code>--http-trace</code> global option and then configure <code>application.yml</code> something like this:</p> <pre><code>logging:\n  file.name: \"/var/tmp/s10k.log\"\n  level:\n    net.solarnetwork.http: \"TRACE\"\n  threshold:\n    console: \"OFF\"\n    file: \"TRACE\"\n</code></pre>"},{"location":"profiles/","title":"Profiles","text":"<p>To help make it easier to provide the necessary SolarNetwork credentials to the tool, you can create named credential  profiles that you can specify with the <code>--profile/-P</code> options, for example:</p> <pre><code>s10k --profile=home ...\n</code></pre> <p>You can also configure a default profile that will be used if no <code>--profile</code> option is provided.</p>"},{"location":"profiles/#credential-profiles-location","title":"Credential profiles location","text":"<p>The profiles are stored in a <code>$HOME/.s10k/credentials</code> file, where <code>$HOME</code> is your system user's \"home\" directory. For example on macOS for a user <code>alice</code> this might look like <code>/Users/alice/.s10k/credentials</code> or on Linux <code>/home/alice/.s10k/credentials</code>.</p> <p>Warning</p> <p>As you will be configuring your SolarNetwork credentials in this file, you should take care to configure limited permissions to the file.</p> <p>Here is how you could set up the <code>credentials</code> file the first time, ensuring limited permissions to the file:</p> macOS/LinuxWindows PowerShell <pre><code>mkdir ~/.s10k\nchmod 700 ~/.s10k\ntouch ~/.s10k/credentials\nchmod 600 ~/.s10k/credentials\n</code></pre> <pre><code>New-Item -ItemType Directory -Path \"$HOME\\.s10k\" -Force | Out-Null\nicacls \"$HOME\\.s10k\" /inheritance:r | Out-Null\nicacls \"$HOME\\.s10k\" /grant:r \"${env:USERNAME}:(OI)(CI)F\" | Out-Null\nNew-Item -ItemType File -Path \"$HOME\\.s10k\\credentials\" -Force | Out-Null\nicacls \"$HOME\\.s10k\\credentials\" /inheritance:r | Out-Null\nicacls \"$HOME\\.s10k\\credentials\" /grant:r \"${env:USERNAME}:(R,W)\" | Out-Null\n</code></pre>"},{"location":"profiles/#credential-profiles-structure","title":"Credential profiles structure","text":"<p>The credentials profile file is a TOML file, where you can include default credentials followed by named profiles, each that start with a <code>[NAME]</code> line, where <code>NAME</code> is the name of the profile. Following that are <code>key = \"value\"</code> configuration lines. For example, here is a <code>credentials</code> file with default credentials followed by two profiles named home and work:</p> <pre><code>sn_token_id = \"DEFAULT_TOKEN_ID\"\nsn_token_secret = \"DEFAULT_TOKEN_SECRET\"\n\n[home]\nsn_token_id = \"HOME_TOKEN_ID\"\nsn_token_secret = \"HOME_TOKEN_SECRET\"\n\n[work]\nsn_token_id = \"WORK_TOKEN_ID\"\nsn_token_secret = \"WORK_TOKEN_SECRET\"\n</code></pre>"},{"location":"profiles/#profile-properties","title":"Profile properties","text":"<p>The following properties are supported in each profile (including the default profile):</p> Profile Property Description <code>sn_token_id</code> The SolarNetwork token identifier <code>sn_token_secret</code> The SolarNetwork token secret"},{"location":"commands/","title":"Commands","text":"<p>The <code>s10k</code> tool works as a set of commands and sub-commands, in a sort of command hierachy.</p>"},{"location":"commands/#command-options","title":"Command options","text":"<p>Commands are passed options, which can come in short or long varieties. Short options start with a single dash <code>-</code> and long options start with a double dash <code>--</code>. For example the \"be more verbose\" global opiton can be specified as the short option <code>-v</code> or the long option <code>--verbose</code>.</p>"},{"location":"commands/#toggle-options","title":"Toggle options","text":"<p>Some options just toggle a feature on or off. They do not require an associated value.</p>"},{"location":"commands/#value-options","title":"Value options","text":"<p>Some options require an associated value. The value can be provided after the option and a space or equal sign followed by the desired value. The value can be enclosed in quotes if it includes spaces or other special characters. In the command documentation, options that require a value are shown with an <code>=</code> sign, for example the list datum command supports the <code>-M=</code> or <code>--max=</code> option for a maximum number of results. If you wanted the result to include a maximum of <code>10</code> results, you could specify that in any of the following ways:</p> <ul> <li><code>-M 10</code></li> <li><code>-M=10</code></li> <li><code>--max 10</code></li> <li><code>--max \"10\"</code></li> <li><code>--max=10</code></li> <li><code>--max=\"10\"</code></li> </ul>"},{"location":"commands/#argument-files","title":"Argument files","text":"<p>If you have a repeated set of arguments that you use frequently, you can stash those options in an argument file and then specify that as an <code>@</code>-prefixed path argument. The file content will be treated as arguments, as if they had been passed directly on the command line. The file can be split across lines and even include <code>#</code> prefixed comment lines.</p> <p>For example, if you like to list datum for the same node and source ID frequently, you could create an argument file like this:</p> fav-list-hourly.args<pre><code># list hourly datum for my favorite datum stream in CSV format\n--profile demo\n datum list\n --display-mode CSV\n --node-id 101\n --source-id con/1\n --aggregate Hour\n</code></pre> <p>Then you could list the datum like this:</p> <pre><code>s10k @fav-list-hourly.args --min-date 2025-08-01 --max-date 2025-08-02\n</code></pre> <p>Notice how you can still provide additional arguments after the <code>@</code> argument.</p> <p>Tip</p> <p>The argument files can themselves include other argument files, by including another <code>@</code> argument, for example <code>@other-file.args</code>.</p> <p>Warning</p> <p>If you need to quote an option value in an argument file, you must use a space between the option and the value, not an <code>=</code> character. For example `--myarg \"value with spaces\".</p>"},{"location":"commands/#command-parameters","title":"Command parameters","text":"<p>Some commands accept parameters, which are arguments passed to the command after all options. The syntax of the parameters are command-specific so refer to a command's documentation for more information.</p>"},{"location":"commands/#file-parameters","title":"File parameters","text":"<p>Some commands accept reading input from a file, and you can specify the path to the file after a <code>@@</code> prefix. For example the node meta save command accepts the metadata to save in this manner.</p> <p>Tip</p> <p>When running in a command shell, redirection and pipes can achieve the same thing as <code>@@</code> file input. For example in <code>sh</code> compatible shells, <code>... @@my-file.json</code> could instead be written like <code>&lt;my-file.json</code></p>"},{"location":"commands/datum/","title":"Datum Commands","text":""},{"location":"commands/datum/list/","title":"Datum List","text":"<p>List datum matching a search filter.</p> <p>Info</p> <p>For more details on the SolarNetwork APIs used by this command, see the documentation for the /datum/stream/datum and /datum/stream/reading endpoints.</p>"},{"location":"commands/datum/list/#usage","title":"Usage","text":"<pre><code>s10k datum list [-S] [-stream=streamId[,streamId...]]...\n                [\n                    -node=nodeId[,nodeId...] [-node=nodeId[,nodeId...]]... |\n                    -loc=locId[,locId...] [-loc=locId[,locId...]]...\n                ]\n                [-source=sourceId[,sourceId...]]...\n                [-ident=identifier[,identifier...]]...\n                [--stream-ident-kind=kind]\n                [-min=&lt;minDate&gt;] [-max=&lt;maxDate&gt;] [-local] [-tz=&lt;zone&gt;]\n                [-recent]\n                [-agg=&lt;aggregation&gt;] [-pagg=&lt;partialAggregation&gt;]\n                [-read=&lt;readingType&gt;] [-tol=&lt;timeTolerance&gt;]\n                [-prop=propName[,propName...]]...\n                [-M=max] [-O=&lt;resultOffset&gt;]\n                [-mode=&lt;displayMode&gt;]\n</code></pre>"},{"location":"commands/datum/list/#options","title":"Options","text":"Option Long Version Description <code>-S</code> <code>--show-stream-ids</code> show stream IDs in <code>PRETTY</code> results <code>-stream=</code> <code>--stream-id=</code> the stream ID(s) to show <code>-node=</code> <code>--node-id=</code> the node ID(s) to show datum for (exclusive to <code>-loc</code>) <code>-loc=</code> <code>--location-id=</code> the location ID(s) to show datum for (exclusive to <code>-node</code>) <code>-source=</code> <code>--source=</code> the source ID(s) to show datum for <code>-ident=</code> <code>--stream-ident=</code> an <code>object:source</code> stream identifier to return datum for; if provided then <code>-node</code> and <code>-source</code> are ignored <code>--stream-ident-kind=</code> the type of objects represented in the <code>-ident</code> option <code>-min=</code> <code>--min-date=</code> a minimum date to limit results to, like <code>2020-10-30</code> or <code>2020-10-30T12:45</code> <code>-max=</code> <code>--max-date=</code> a maximum date (exclusive) to limit results to, in same form as <code>-min</code> <code>-local</code> <code>--local-dates</code> treat the min/max dates as \"node local\" dates, instead of UTC (or the local time zone when <code>-tz</code> used) <code>-tz=</code> <code>--time-zone=</code> a time zone ID to treat the min/max dates as instead of the local time zone, like <code>Pacific/Auckland</code> or <code>-05:00</code> or <code>UTC</code> <code>-recent</code> <code>--most-recent</code> show just the most recently available data, within min/max dates if specified <code>-agg=</code> <code>--aggregation=</code> the aggregation type to return <code>-pagg=</code> <code>--partial-aggregation=</code> a partial aggregation level to use <code>-read=</code> <code>--reading=</code> return reading aggregation results instead of listing results <code>-tol=</code> <code>--tolerance</code> a time tolerance to use with reading-style queries that support it, as an ISO period like <code>P7D</code> for 7 days <code>-prop=</code> <code>--property=</code> restrict results to metadata that has this property (instantaneous, accumulating, or status); multiple properties combine with logical \"or\" <code>-M=</code> <code>--max=</code> the maximum number of results to return <code>-O=</code> <code>--offset=</code> start returning results from this offset, <code>0</code> being the first result <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code>; note that <code>PRETTY</code> is not suitable for large result sets"},{"location":"commands/datum/list/#output","title":"Output","text":"<p>A listing of all matching datum.</p>"},{"location":"commands/datum/list/#examples","title":"Examples","text":"<p>List hour-level aggregate datum over a date range:</p> List hourly datumPretty OutputCSV OutputJSON Output <pre><code>s10k datum list --node-id 101 --source-id con/1 \\\n  --min-date 2025-08-21 --max-date 2025-08-22 --aggregation Hour\n</code></pre> <pre><code>+----------------------+-----------+-----------+----------+---------+---------+-----------+----------+-----------+\n| Timestamp Start      | Object ID | Source ID | watts    | current | voltage | frequency | pcmLimit | wattHours |\n+----------------------+-----------+-----------+----------+---------+---------+-----------+----------+-----------+\n| 2025-08-20T21:00:00Z | 101       | con/1     | 2473.904 |  10.749 | 230.149 |    49.976 |          |    2078.5 |\n+----------------------+-----------+-----------+----------+---------+---------+-----------+----------+-----------+\n| 2025-08-20T22:00:00Z | 101       | con/1     | 2374.817 |  10.308 | 230.273 |    50.004 |          |    2347.3 |\n+----------------------+-----------+-----------+----------+---------+---------+-----------+----------+-----------+\n| 2025-08-20T23:00:00Z | 101       | con/1     | 2570.453 |  11.171 | 230.085 |    50.004 |          | -4254.242 |\n+----------------------+-----------+-----------+----------+---------+---------+-----------+----------+-----------+\n| 2025-08-21T00:00:00Z | 101       | con/1     |   1289.5 |   5.656 | 228.478 |    49.826 |          |     8.442 |\n+----------------------+-----------+-----------+----------+---------+---------+-----------+----------+-----------+\n</code></pre> <pre><code>ts_start,ts_end,streamId,objectId,sourceId,watts,watts_count,watts_min,watts_max,current,current_count,current_min,current_max,voltage,voltage_count,voltage_min,voltage_max,frequency,frequency_count,frequency_min,frequency_max,pcmLimit,pcmLimit_count,pcmLimit_min,pcmLimit_max,wattHours,wattHours_start,wattHours_end,tags\n2025-08-20T21:00:00Z,,03c6bd01-9241-4771-ad3c-a1d5eb06b68a,101,con/1,2473.9038461538461538,52,1153,3518,10.7490174230769231,52,5.0912933,14.998348,230.1490155769230769,52,225.00418,234.99796,49.9755515576923077,52,49.800114,50.199997,,0,,,2078.5,8186363,8225742,\n2025-08-20T22:00:00Z,,03c6bd01-9241-4771-ad3c-a1d5eb06b68a,101,con/1,2374.8166666666666667,60,1130,3501,10.3080711733333333,60,5.0031877,14.948236,230.273054,60,225.00723,234.97006,50.0040209666666667,60,49.800064,50.2,,0,,,2347.3,8225742,8228086,\n2025-08-20T23:00:00Z,,03c6bd01-9241-4771-ad3c-a1d5eb06b68a,101,con/1,2570.4528301886792453,53,1154,3520,11.1705456301886792,53,5.083911,14.998905,230.085467358490566,53,225.00075,234.99974,50.0041884150943396,53,49.80096,50.19986,,0,,,-4254.24152242083932392196,8228086,8223839,\n2025-08-21T00:00:00Z,,03c6bd01-9241-4771-ad3c-a1d5eb06b68a,101,con/1,1289.5,2,1158,1421,5.6555533,2,5.000019,6.3110876,228.477535,2,225.31104,231.64403,49.82638,2,49.800034,49.852726,,0,,,8.44152242083932392196,8223839,8223848,\n</code></pre> <pre><code>{\n    \"success\":true,\n    \"meta\":[\n        {\"streamId\":\"03c6bd01-9241-4771-ad3c-a1d5eb06b68a\",\"zone\":\"Pacific/Auckland\",\"kind\":\"n\",\"objectId\":101,\"sourceId\":\"con/1\",\"i\":[\"watts\",\"current\",\"voltage\",\"frequency\",\"pcmLimit\"],\"a\":[\"wattHours\"]}\n    ],\n    \"data\":[\n        [0,[1755723600000,null],[2473.9038461538461538,52,1153,3518],[10.7490174230769231,52,5.0912933,14.998348],[230.1490155769230769,52,225.00418,234.99796],[49.9755515576923077,52,49.800114,50.199997],[null,0,null,null],[2078.5,8186363,8225742]],\n        [0,[1755727200000,null],[2374.8166666666666667,60,1130,3501],[10.3080711733333333,60,5.0031877,14.948236],[230.273054,60,225.00723,234.97006],[50.0040209666666667,60,49.800064,50.2],[null,0,null,null],[2347.3,8225742,8228086]],\n        [0,[1755730800000,null],[2570.4528301886792453,53,1154,3520],[11.1705456301886792,53,5.083911,14.998905],[230.085467358490566,53,225.00075,234.99974],[50.0041884150943396,53,49.80096,50.19986],[null,0,null,null],[-4254.24152242083932392196,8228086,8223839]],\n        [0,[1755734400000,null],[1289.5,2,1158,1421],[5.6555533,2,5.000019,6.3110876],[228.477535,2,225.31104,231.64403],[49.82638,2,49.800034,49.852726],[null,0,null,null],[8.44152242083932392196,8223839,8223848]]\n    ]\n}\n</code></pre> <p>Show a reading difference between two dates:</p> Show reading differencePretty OutputCSV OutputJSON Output <pre><code>s10k datum list --node-id 101 --source-id con/1 \\\n  --min-date 2025-08-21 --max-date 2025-08-22  --reading Difference\n</code></pre> <pre><code>+----------------------+----------------------+-----------+-----------+-----------+\n| Timestamp            | Timestamp End        | Object ID | Source ID | wattHours |\n+----------------------+----------------------+-----------+-----------+-----------+\n| 2025-07-25T20:18:21Z | 2025-08-21T00:08:18Z | 101       | con/1     |     37485 |\n+----------------------+----------------------+-----------+-----------+-----------+\n</code></pre> <pre><code>ts_start,ts_end,streamId,objectId,sourceId,watts,watts_count,watts_min,watts_max,current,current_count,current_min,current_max,voltage,voltage_count,voltage_min,voltage_max,frequency,frequency_count,frequency_min,frequency_max,pcmLimit,pcmLimit_count,pcmLimit_min,pcmLimit_max,wattHours,wattHours_start,wattHours_end,tags\n2025-07-25T20:18:21Z,2025-08-21T00:08:18Z,03c6bd01-9241-4771-ad3c-a1d5eb06b68a,101,con/1,,,,,,,,,,,,,,,,,,,,,37485,8186363,8223848,\n</code></pre> <pre><code>{\n    \"success\":true,\n    \"meta\":[\n        {\"streamId\":\"03c6bd01-9241-4771-ad3c-a1d5eb06b68a\",\"zone\":\"Pacific/Auckland\",\"kind\":\"n\",\"objectId\":101,\"sourceId\":\"con/1\",\"i\":[\"watts\",\"current\",\"voltage\",\"frequency\",\"pcmLimit\"],\"a\":[\"wattHours\"]}\n    ],\n    \"data\":[\n        [0,[1753474701000,1755734898000],null,null,null,null,null,[37485,8186363,8223848]]\n    ]\n}\n</code></pre> <p>Use the datum stream ids command to generate a list of stream IDs that have <code>watts</code> and <code>wattHours</code> properties to list datum for, then list datum for those streams, showing just those properties:</p> List datum for dynamic stream IDs<pre><code>s10k datum list \\\n  --min-date 2025-08-21 \\\n  --max-date 2025-08-22 \\\n  --aggregation Hour \\\n  --property watts,wattHours \\\n  --stream-id $( \\\n    s10k datum stream ids \\\n      --instantaneous watts \\\n      --accumulating wattHours \\\n      --display-mode JSON \\\n    |jq -r 'map(.streamId) | join(\",\")' \\\n  )\n</code></pre> <p>Use the nodes sources command to generate a list of stream IDs that have <code>watts</code> and <code>wattHours</code> properties and have posted datum after <code>2025-08-01</code> to list datum for, then list datum for those streams, showing just those properties:</p> List datum for dynamic sources<pre><code>s10k datum list \\\n  --min-date 2025-08-21 \\\n  --max-date 2025-08-22 \\\n  --aggregation Hour \\\n  --property watts,wattHours \\\n  --stream-ident $( \\\n    s10k nodes sources \\\n      --instantaneous watts \\\n      --accumulating wattHours \\\n      --min-date 2025-08-01 \\\n      --display-mode JSON \\\n    |jq -r 'map([.objectId, .sourceId] | join(\":\")) | join(\",\")' \\\n  )\n</code></pre>"},{"location":"commands/datum/stream/ids/","title":"Datum Stream Ids","text":"<p>Show datum stream metadata IDs matching a search filter.</p>"},{"location":"commands/datum/stream/ids/#usage","title":"Usage","text":"<pre><code>s10k datum stream ids [-mode=&lt;displayMode&gt;]\n                      [-source=sourceId[,sourceId...]]...\n                      [-stream=streamId[,streamId...]]...\n                      [\n                        -node=nodeId[,nodeId...][-node=nodeId[,nodeId...]]... |\n                        -loc=locId[,locId...] [-loc=locId[,locId...]]...\n                       ]\n                      [-prop=propName[,propName...]]...\n                      [-a=propName[,propName...]]...\n                      [-i=propName[,propName...]]...\n                      [-s=propName[,propName...]]...\n</code></pre>"},{"location":"commands/datum/stream/ids/#options","title":"Options","text":"Option Long Version Description <code>-stream=</code> <code>--stream-id=</code> the stream ID(s) to show <code>-node=</code> <code>--node-id=</code> the node ID(s) to show stream metadata for (exclusive to <code>-loc</code>) <code>-loc=</code> <code>--location-id=</code> the location ID(s) to show stream metadata for (exclusive to <code>-node</code>) <code>-source=</code> <code>--source=</code> the source ID(s) to show stream metadata for <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code> <code>-prop=</code> <code>--property=</code> restrict results to metadata that has this property (instantaneous, accumulating, or status); multiple properties combine with logical \"or\" <code>-i=</code> <code>--instantaneous=</code> restrict results to metadata that has this instantaneous property; multiple properties combine with logical \"and\" <code>-a=</code> <code>--accumulating=</code> restrict results to metadata that has this accumulating property; multiple properties combine with logical \"and\" <code>-s=</code> <code>--status=</code> restrict results to metadata that has this status property; multiple properties combine with logical \"and\""},{"location":"commands/datum/stream/ids/#output","title":"Output","text":"<p>A listing of all matching stream metadata.</p>"},{"location":"commands/datum/stream/ids/#examples","title":"Examples","text":"<p>View all datum stream metadata IDs for a node:</p> Show datum stream metadata IDs for nodePretty OutputCSV OutputJSON Output <pre><code>s10k datum stream ids --node-id 101\n</code></pre> <pre><code>+--------------------------------------+------+-----+---------------+\n| Stream ID                            | Kind | ID  | Source ID     |\n+--------------------------------------+------+-----+---------------+\n| f68e81cd-2ac3-4760-b449-16ebce64c15a | Node | 101 | switch/1      |\n+--------------------------------------+------+-----+---------------+\n| 6718cc51-e5fb-43a9-a33f-344bc34916f2 | Node | 101 | power/limit   |\n+--------------------------------------+------+-----+---------------+\n| cc114908-cc0f-4680-a92e-718690742ba9 | Node | 101 | gen/1         |\n+--------------------------------------+------+-----+---------------+\n</code></pre> <pre><code>Stream ID,Kind,ID,Source ID\nf68e81cd-2ac3-4760-b449-16ebce64c15a,Node,101,switch/1\n6718cc51-e5fb-43a9-a33f-344bc34916f2,Node,101,power/limit\ncc114908-cc0f-4680-a92e-718690742ba9,Node,101,gen/1\n</code></pre> <pre><code>[ {\n\"streamId\" : \"f68e81cd-2ac3-4760-b449-16ebce64c15a\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"switch/1\"\n}, {\n\"streamId\" : \"6718cc51-e5fb-43a9-a33f-344bc34916f2\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"power/limit\"\n}, {\n\"streamId\" : \"cc114908-cc0f-4680-a92e-718690742ba9\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"gen/1\"\n} ]\n</code></pre> <p>View all datum stream metadata IDs for a node that has some property named <code>watts</code>:</p> Show datum stream metadata IDs for node with watts propertyPretty OutputCSV OutputJSON Output <pre><code>s10k datum stream ids --node-id 101 --property watts\n</code></pre> <pre><code>+--------------------------------------+------+-----+-----------+\n| Stream ID                            | Kind | ID  | Source ID |\n+--------------------------------------+------+-----+-----------+\n| cc114908-cc0f-4680-a92e-718690742ba9 | Node | 101 | gen/1     |\n+--------------------------------------+------+-----+-----------+\n| 0c0fc45d-1e96-40cb-8aa0-07619b3158fd | Node | 101 | con/pcm   |\n+--------------------------------------+------+-----+-----------+\n| 03c6bd01-9241-4771-ad3c-a1d5eb06b68a | Node | 101 | con/1     |\n+--------------------------------------+------+-----+-----------+\n</code></pre> <pre><code>Stream ID,Kind,ID,Source ID\ncc114908-cc0f-4680-a92e-718690742ba9,Node,101,gen/1\n0c0fc45d-1e96-40cb-8aa0-07619b3158fd,Node,101,con/pcm\n03c6bd01-9241-4771-ad3c-a1d5eb06b68a,Node,101,con/1\n</code></pre> <pre><code>[ {\n\"streamId\" : \"cc114908-cc0f-4680-a92e-718690742ba9\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"gen/1\"\n}, {\n\"streamId\" : \"0c0fc45d-1e96-40cb-8aa0-07619b3158fd\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"con/pcm\"\n}, {\n\"streamId\" : \"03c6bd01-9241-4771-ad3c-a1d5eb06b68a\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"con/1\"\n} ]\n</code></pre> <p>Find all source IDs for a node where the datum stream has an instantaneous property named <code>voltage</code> and an accumulating property named <code>wattHours</code>:</p> Find source IDs with voltage, wattHours propertiesOutput <pre><code>s10k datum stream ids --instantaneous voltage \\\n  --accumulating wattHours --mode JSON \\\n  |jq -r 'map(.sourceId) | join(\",\")'\n</code></pre> <pre><code>con/1,con/pcm,gen/1\n</code></pre> <p>View all datum stream metadata IDs that have an instantaneous property named <code>pcmLimit</code> and an accumulating property named <code>wattHours</code>:</p> Show datum stream metadata IDs with pcmLimit, wattHours propertiesPretty OutputCSV OutputJSON Output <pre><code>s10k datum stream ids --instantaneous pcmLimit \\\n  --accumulating wattHours\n</code></pre> <pre><code>+--------------------------------------+------+-----+-----------+\n| Stream ID                            | Kind | ID  | Source ID |\n+--------------------------------------+------+-----+-----------+\n| 2e16deac-bd95-4d4b-9668-4441f48aea17 | Node |  64 | /meter/1  |\n+--------------------------------------+------+-----+-----------+\n| a73f4797-d9aa-4496-b96c-04ad934b1550 | Node |  64 | /meter/2  |\n+--------------------------------------+------+-----+-----------+\n| 2d19d690-2472-480d-afc0-240f830d4cd5 | Node |  70 | meter/1   |\n+--------------------------------------+------+-----+-----------+\n| 03c6bd01-9241-4771-ad3c-a1d5eb06b68a | Node | 101 | con/1     |\n+--------------------------------------+------+-----+-----------+\n| 0c0fc45d-1e96-40cb-8aa0-07619b3158fd | Node | 101 | con/pcm   |\n+--------------------------------------+------+-----+-----------+\n| cc114908-cc0f-4680-a92e-718690742ba9 | Node | 101 | gen/1     |\n+--------------------------------------+------+-----+-----------+\n</code></pre> <pre><code>Stream ID,Kind,ID,Source ID\n2e16deac-bd95-4d4b-9668-4441f48aea17,Node,64,/meter/1\na73f4797-d9aa-4496-b96c-04ad934b1550,Node,64,/meter/2\n2d19d690-2472-480d-afc0-240f830d4cd5,Node,70,meter/1\n03c6bd01-9241-4771-ad3c-a1d5eb06b68a,Node,101,con/1\n0c0fc45d-1e96-40cb-8aa0-07619b3158fd,Node,101,con/pcm\ncc114908-cc0f-4680-a92e-718690742ba9,Node,101,gen/1\n</code></pre> <pre><code>[ {\n\"streamId\" : \"2e16deac-bd95-4d4b-9668-4441f48aea17\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 64,\n\"sourceId\" : \"/meter/1\"\n}, {\n\"streamId\" : \"a73f4797-d9aa-4496-b96c-04ad934b1550\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 64,\n\"sourceId\" : \"/meter/2\"\n}, {\n\"streamId\" : \"2d19d690-2472-480d-afc0-240f830d4cd5\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 70,\n\"sourceId\" : \"meter/1\"\n}, {\n\"streamId\" : \"03c6bd01-9241-4771-ad3c-a1d5eb06b68a\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"con/1\"\n}, {\n\"streamId\" : \"0c0fc45d-1e96-40cb-8aa0-07619b3158fd\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"con/pcm\"\n}, {\n\"streamId\" : \"cc114908-cc0f-4680-a92e-718690742ba9\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"gen/1\"\n} ]\n</code></pre>"},{"location":"commands/datum/stream/list/","title":"Datum Stream List","text":"<p>Show datum stream metadata matching a search filter.</p>"},{"location":"commands/datum/stream/list/#usage","title":"Usage","text":"<pre><code>s10k datum stream list [-mode=&lt;displayMode&gt;]\n                       [-source=sourceId[,sourceId...]]...\n                       [-stream=streamId[,streamId...]]...\n                       [\n                         -node=nodeId[,nodeId...][-node=nodeId[,nodeId...]]... |\n                         -loc=locId[,locId...] [-loc=locId[,locId...]]...\n                        ]\n                       [-prop=propName[,propName...]]...\n                       [-a=propName[,propName...]]...\n                       [-i=propName[,propName...]]...\n                       [-s=propName[,propName...]]...\n</code></pre>"},{"location":"commands/datum/stream/list/#options","title":"Options","text":"Option Long Version Description <code>-stream=</code> <code>--stream-id=</code> the stream ID(s) to show <code>-node=</code> <code>--node-id=</code> the node ID(s) to show stream metadata for (exclusive to <code>-loc</code>) <code>-loc=</code> <code>--location-id=</code> the location ID(s) to show stream metadata for (exclusive to <code>-node</code>) <code>-source=</code> <code>--source=</code> the source ID(s) to show stream metadata for <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code> <code>-prop=</code> <code>--property=</code> restrict results to metadata that has this property (instantaneous, accumulating, or status); multiple properties combine with logical \"or\" <code>-i=</code> <code>--instantaneous=</code> restrict results to metadata that has this instantaneous property; multiple properties combine with logical \"and\" <code>-a=</code> <code>--accumulating=</code> restrict results to metadata that has this accumulating property; multiple properties combine with logical \"and\" <code>-s=</code> <code>--status=</code> restrict results to metadata that has this status property; multiple properties combine with logical \"and\""},{"location":"commands/datum/stream/list/#output","title":"Output","text":"<p>A listing of all matching stream metadata.</p>"},{"location":"commands/datum/stream/list/#examples","title":"Examples","text":"<p>View all datum stream metadata for a node:</p> Show datum stream metadata for nodePretty OutputCSV OutputJSON Output <pre><code>s10k datum stream list --node-id 101\n</code></pre> <pre><code>+--------------------------------------+------+-----+---------------+------------------+---------------------------------+--------------+--------+\n| Stream ID                            | Kind | ID  | Source ID     | Time Zone        | Instantaneous                   | Accumulating | Status |\n+--------------------------------------+------+-----+---------------+------------------+---------------------------------+--------------+--------+\n| f68e81cd-2ac3-4760-b449-16ebce64c15a | Node | 101 | switch/1      | Pacific/Auckland |                                 |              | val    |\n+--------------------------------------+------+-----+---------------+------------------+---------------------------------+--------------+--------+\n| 6718cc51-e5fb-43a9-a33f-344bc34916f2 | Node | 101 | power/limit   | Pacific/Auckland | v                               |              | val    |\n+--------------------------------------+------+-----+---------------+------------------+---------------------------------+--------------+--------+\n| cc114908-cc0f-4680-a92e-718690742ba9 | Node | 101 | gen/1         | Pacific/Auckland | current,frequency,voltage,watts | wattHours    |        |\n+--------------------------------------+------+-----+---------------+------------------+---------------------------------+--------------+--------+\n</code></pre> <pre><code>Stream ID,Kind,ID,Source ID,Time Zone,Instantaneous,Accumulating,Status\nf68e81cd-2ac3-4760-b449-16ebce64c15a,Node,101,switch/1,Pacific/Auckland,,,val\n6718cc51-e5fb-43a9-a33f-344bc34916f2,Node,101,power/limit,Pacific/Auckland,v,,val\ncc114908-cc0f-4680-a92e-718690742ba9,Node,101,gen/1,Pacific/Auckland,\"current,frequency,voltage,watts\",wattHours,\n</code></pre> <pre><code>[ {\n\"streamId\" : \"f68e81cd-2ac3-4760-b449-16ebce64c15a\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"switch/1\",\n\"s\" : [ \"val\" ]\n}, {\n\"streamId\" : \"6718cc51-e5fb-43a9-a33f-344bc34916f2\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"power/limit\",\n\"i\" : [ \"v\" ],\n\"s\" : [ \"val\" ]\n}, {\n\"streamId\" : \"cc114908-cc0f-4680-a92e-718690742ba9\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"gen/1\",\n\"i\" : [ \"watts\", \"current\", \"voltage\", \"frequency\" ],\n\"a\" : [ \"wattHours\" ]\n} ]\n</code></pre> <p>View all datum stream metadata for a node that has some property named <code>watts</code>:</p> Show datum stream metadata for node with watts propertyPretty OutputCSV OutputJSON Output <pre><code>s10k datum stream list --node-id 101 --property watts\n</code></pre> <pre><code>+--------------------------------------+------+-----+-----------+------------------+------------------------------------------+--------------+--------+\n| Stream ID                            | Kind | ID  | Source ID | Time Zone        | Instantaneous                            | Accumulating | Status |\n+--------------------------------------+------+-----+-----------+------------------+------------------------------------------+--------------+--------+\n| cc114908-cc0f-4680-a92e-718690742ba9 | Node | 101 | gen/1     | Pacific/Auckland | current,frequency,voltage,watts          | wattHours    |        |\n+--------------------------------------+------+-----+-----------+------------------+------------------------------------------+--------------+--------+\n| 0c0fc45d-1e96-40cb-8aa0-07619b3158fd | Node | 101 | con/pcm   | Pacific/Auckland | current,frequency,pcmLimit,voltage,watts | wattHours    |        |\n+--------------------------------------+------+-----+-----------+------------------+------------------------------------------+--------------+--------+\n| 03c6bd01-9241-4771-ad3c-a1d5eb06b68a | Node | 101 | con/1     | Pacific/Auckland | current,frequency,pcmLimit,voltage,watts | wattHours    |        |\n+--------------------------------------+------+-----+-----------+------------------+------------------------------------------+--------------+--------+\n</code></pre> <pre><code>Stream ID,Kind,ID,Source ID,Time Zone,Instantaneous,Accumulating,Status\ncc114908-cc0f-4680-a92e-718690742ba9,Node,101,gen/1,Pacific/Auckland,\"current,frequency,voltage,watts\",wattHours,\n0c0fc45d-1e96-40cb-8aa0-07619b3158fd,Node,101,con/pcm,Pacific/Auckland,\"current,frequency,pcmLimit,voltage,watts\",wattHours,\n03c6bd01-9241-4771-ad3c-a1d5eb06b68a,Node,101,con/1,Pacific/Auckland,\"current,frequency,pcmLimit,voltage,watts\",wattHours,\n</code></pre> <pre><code>[ {\n\"streamId\" : \"cc114908-cc0f-4680-a92e-718690742ba9\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"gen/1\",\n\"i\" : [ \"watts\", \"current\", \"voltage\", \"frequency\" ],\n\"a\" : [ \"wattHours\" ]\n}, {\n\"streamId\" : \"0c0fc45d-1e96-40cb-8aa0-07619b3158fd\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"con/pcm\",\n\"i\" : [ \"watts\", \"current\", \"voltage\", \"pcmLimit\", \"frequency\" ],\n\"a\" : [ \"wattHours\" ]\n}, {\n\"streamId\" : \"03c6bd01-9241-4771-ad3c-a1d5eb06b68a\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"con/1\",\n\"i\" : [ \"watts\", \"current\", \"voltage\", \"frequency\", \"pcmLimit\" ],\n\"a\" : [ \"wattHours\" ]\n} ]\n</code></pre> <p>View all datum stream metadata that has an instantaneous property named <code>pcmLimit</code> and an accumulating property named <code>wattHours</code>:</p> Show datum stream metadata with pcmLimit, wattHours propertiesPretty OutputCSV OutputJSON Output <pre><code>s10k datum stream list --instantaneous pcmLimit \\\n  --accumulating wattHours\n</code></pre> <pre><code>+--------------------------------------+------+-----+-----------+------------------+--------------------------------------------------------------------------------+-------------------+--------+\n| Stream ID                            | Kind | ID  | Source ID | Time Zone        | Instantaneous                                                                  | Accumulating      | Status |\n+--------------------------------------+------+-----+-----------+------------------+--------------------------------------------------------------------------------+-------------------+--------+\n| 2e16deac-bd95-4d4b-9668-4441f48aea17 | Node |  64 | /meter/1  | Pacific/Auckland | apparentPower,current,frequency,phaseVoltage,powerFactor,reactivePower,realPow | wattHours         |        |\n|                                      |      |     |           |                  | er,voltage,watts                                                               |                   |        |\n+--------------------------------------+------+-----+-----------+------------------+--------------------------------------------------------------------------------+-------------------+--------+\n| a73f4797-d9aa-4496-b96c-04ad934b1550 | Node |  64 | /meter/2  | Pacific/Auckland | apparentPower,current,frequency,phaseVoltage,powerFactor,reactivePower,realPow | wattHours         |        |\n|                                      |      |     |           |                  | er,voltage,watts                                                               |                   |        |\n+--------------------------------------+------+-----+-----------+------------------+--------------------------------------------------------------------------------+-------------------+--------+\n| 2d19d690-2472-480d-afc0-240f830d4cd5 | Node |  70 | meter/1   | Pacific/Auckland | current,frequency,voltage,watts                                                | wattHours,wh_half |        |\n+--------------------------------------+------+-----+-----------+------------------+--------------------------------------------------------------------------------+-------------------+--------+\n| 03c6bd01-9241-4771-ad3c-a1d5eb06b68a | Node | 101 | con/1     | Pacific/Auckland | current,frequency,pcmLimit,voltage,watts                                       | wattHours         |        |\n+--------------------------------------+------+-----+-----------+------------------+--------------------------------------------------------------------------------+-------------------+--------+\n| 0c0fc45d-1e96-40cb-8aa0-07619b3158fd | Node | 101 | con/pcm   | Pacific/Auckland | current,frequency,pcmLimit,voltage,watts                                       | wattHours         |        |\n+--------------------------------------+------+-----+-----------+------------------+--------------------------------------------------------------------------------+-------------------+--------+\n| cc114908-cc0f-4680-a92e-718690742ba9 | Node | 101 | gen/1     | Pacific/Auckland | current,frequency,voltage,watts                                                | wattHours         |        |\n+--------------------------------------+------+-----+-----------+------------------+--------------------------------------------------------------------------------+-------------------+--------+\n</code></pre> <pre><code>Stream ID,Kind,ID,Source ID,Time Zone,Instantaneous,Accumulating,Status\n2e16deac-bd95-4d4b-9668-4441f48aea17,Node,64,/meter/1,Pacific/Auckland,\"apparentPower,current,frequency,phaseVoltage,powerFactor,reactivePower,realPower,voltage,watts\",wattHours,\na73f4797-d9aa-4496-b96c-04ad934b1550,Node,64,/meter/2,Pacific/Auckland,\"apparentPower,current,frequency,phaseVoltage,powerFactor,reactivePower,realPower,voltage,watts\",wattHours,\n2d19d690-2472-480d-afc0-240f830d4cd5,Node,70,meter/1,Pacific/Auckland,\"current,frequency,voltage,watts\",\"wattHours,wh_half\",\n03c6bd01-9241-4771-ad3c-a1d5eb06b68a,Node,101,con/1,Pacific/Auckland,\"current,frequency,pcmLimit,voltage,watts\",wattHours,\n0c0fc45d-1e96-40cb-8aa0-07619b3158fd,Node,101,con/pcm,Pacific/Auckland,\"current,frequency,pcmLimit,voltage,watts\",wattHours,\ncc114908-cc0f-4680-a92e-718690742ba9,Node,101,gen/1,Pacific/Auckland,\"current,frequency,voltage,watts\",wattHours,\n</code></pre> <pre><code>[ {\n\"streamId\" : \"2e16deac-bd95-4d4b-9668-4441f48aea17\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 64,\n\"sourceId\" : \"/meter/1\",\n\"i\" : [ \"watts\", \"current\", \"voltage\", \"frequency\", \"realPower\", \"powerFactor\", \"phaseVoltage\", \"apparentPower\", \"reactivePower\" ],\n\"a\" : [ \"wattHours\" ]\n}, {\n\"streamId\" : \"a73f4797-d9aa-4496-b96c-04ad934b1550\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 64,\n\"sourceId\" : \"/meter/2\",\n\"i\" : [ \"watts\", \"current\", \"voltage\", \"frequency\", \"realPower\", \"powerFactor\", \"phaseVoltage\", \"apparentPower\", \"reactivePower\" ],\n\"a\" : [ \"wattHours\" ]\n}, {\n\"streamId\" : \"2d19d690-2472-480d-afc0-240f830d4cd5\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 70,\n\"sourceId\" : \"meter/1\",\n\"i\" : [ \"watts\", \"current\", \"voltage\", \"frequency\" ],\n\"a\" : [ \"wattHours\", \"wh_half\" ]\n}, {\n\"streamId\" : \"03c6bd01-9241-4771-ad3c-a1d5eb06b68a\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"con/1\",\n\"i\" : [ \"watts\", \"current\", \"voltage\", \"frequency\", \"pcmLimit\" ],\n\"a\" : [ \"wattHours\" ]\n}, {\n\"streamId\" : \"0c0fc45d-1e96-40cb-8aa0-07619b3158fd\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"con/pcm\",\n\"i\" : [ \"watts\", \"current\", \"voltage\", \"pcmLimit\", \"frequency\" ],\n\"a\" : [ \"wattHours\" ]\n}, {\n\"streamId\" : \"cc114908-cc0f-4680-a92e-718690742ba9\",\n\"zone\" : \"Pacific/Auckland\",\n\"kind\" : \"n\",\n\"objectId\" : 101,\n\"sourceId\" : \"gen/1\",\n\"i\" : [ \"watts\", \"current\", \"voltage\", \"frequency\" ],\n\"a\" : [ \"wattHours\" ]\n} ]\n</code></pre>"},{"location":"commands/datum/stream/view/","title":"Datum Stream View","text":"<p>View a specific datum stream metadata.</p>"},{"location":"commands/datum/stream/view/#usage","title":"Usage","text":"<pre><code>s10k datum stream view [-mode=&lt;displayMode&gt;] -stream=streamId\n</code></pre>"},{"location":"commands/datum/stream/view/#options","title":"Options","text":"Option Long Version Description <code>-stream=</code> <code>--stream-id=</code> the stream ID to show <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code>"},{"location":"commands/datum/stream/view/#output","title":"Output","text":"<p>A table of datum stream metadata properties.</p>"},{"location":"commands/datum/stream/view/#examples","title":"Examples","text":"View datum stream metadataPretty OutputCSV OutputJSON Output <pre><code>s10k datum stream view --stream-id cc114908-cc0f-4680-a92e-718690742ba9\n</code></pre> <pre><code>+---------------+--------------------------------------+\n| Property      | Value                                |\n+---------------+--------------------------------------+\n| Stream ID     | cc114908-cc0f-4680-a92e-718690742ba9 |\n+---------------+--------------------------------------+\n| Kind          | Node                                 |\n+---------------+--------------------------------------+\n| ID            | 101                                  |\n+---------------+--------------------------------------+\n| Source ID     | gen/1                                |\n+---------------+--------------------------------------+\n| Time Zone     | Pacific/Auckland                     |\n+---------------+--------------------------------------+\n| Instantaneous | watts,current,voltage,frequency      |\n+---------------+--------------------------------------+\n| Accumulating  | wattHours                            |\n+---------------+--------------------------------------+\n| Status        |                                      |\n+---------------+--------------------------------------+\n</code></pre> <pre><code>Property,Value\nStream ID,cc114908-cc0f-4680-a92e-718690742ba9\nKind,Node\nID,1011\nSource ID,test/gen/1\nTime Zone,Pacific/Auckland\nInstantaneous,\"watts,current,voltage,frequency\"\nAccumulating,wattHours\nStatus,\n</code></pre> <pre><code>{\n    \"streamId\" : \"cc114908-cc0f-4680-a92e-718690742ba9\",\n    \"zone\" : \"Pacific/Auckland\",\n    \"kind\" : \"n\",\n    \"objectId\" : 101,\n    \"sourceId\" : \"gen/1\",\n    \"i\" : [ \"watts\", \"current\", \"voltage\", \"frequency\" ],\n    \"a\" : [ \"wattHours\" ]\n}\n</code></pre>"},{"location":"commands/flux/","title":"Flux Commands","text":"<p>The <code>flux</code> commands deal with SolarFlux, the real-time message service in SolarNetwork.</p>"},{"location":"commands/flux/tail/","title":"Flux Tail","text":"<p>Subscribe to a SolarFlux topic and display received messages.</p> <p>Bug</p> <p>This command might print some scary looking <code>WARNING</code> messages to standard error when it starts up. These can be ignored by redirecting standard error, for example <code>2&gt;/dev/null</code> in macOS or Linux.</p>"},{"location":"commands/flux/tail/#usage","title":"Usage","text":"<pre><code>s10k flux tail [-G] [-prop=propName[,propName...]]...\n                [-R=&lt;maxPrecision&gt;] [--client-id=&lt;clientIdSuffix&gt;]\n                (\n                    -t=filter\n                    [[-node=&lt;nodeId&gt;] [-source=&lt;sourceId&gt;]]\n                )\n                [-mode=&lt;displayMode&gt;]\n</code></pre>"},{"location":"commands/flux/tail/#options","title":"Options","text":"Option Long Version Description <code>-G</code> <code>--csv-global-header</code> display just one CSV header row, based either on the <code>-prop</code> values or the first message properties <code>-prop=</code> <code>--property=</code> restrict the results to this property (or properties for multiple) <code>-R=</code> <code>--max-precision=</code> maximum number of decimal digits to display, or <code>-1</code> for no rounding; defaults to <code>3</code> <code>--client-id</code> a specific client ID to use, instead of a random default <code>-t=</code> <code>--topic=</code> the MQTT topic filter to subscribe to (exclusive to <code>-node</code> and <code>-source</code>) <code>-node=</code> <code>--node-id=</code> the node ID (or <code>+</code> wildcard) to show datum for (exclusive to <code>-topic</code>, requires <code>-source</code>) <code>-source=</code> <code>--source=</code> the source ID topic pattern to show datum for (exclusive to <code>-topic</code>, requires <code>-node</code>) <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code>; note that <code>PRETTY</code> is not suitable for large result sets"},{"location":"commands/flux/tail/#output","title":"Output","text":"<p>All matching messages. To stop receiving messages type Ctrl+C on macOS or Linux.</p>"},{"location":"commands/flux/tail/#examples","title":"Examples","text":"<p>Subscribe to all node <code>101</code> datum sources starting with <code>con/</code>, showing just the <code>created</code>, <code>sourceId</code>, <code>watts</code>, and <code>wattHours</code> properties. Note the <code>--csv-global-header</code> only applies to the <code>CSV</code> output:</p> Tail datum showing just watts and wattHoursPretty OutputCSV OutputJSON Output <pre><code>s10k flux tail --node-id 101 --source-id con/\\#  \\\n  --csv-global-header \\\n  --property created,sourceId,watts,wattHours\n</code></pre> <pre><code>+--------------------------+----------+-------+-----------+\n| created                  | sourceId | watts | wattHours |\n+--------------------------+----------+-------+-----------+\n| 2025-09-05T06:24:55.227Z | con/pcm  |  2408 |   8259102 |\n+--------------------------+----------+-------+-----------+\n+----------------------+----------+-------+-----------+\n| created              | sourceId | watts | wattHours |\n+----------------------+----------+-------+-----------+\n| 2025-09-05T06:26:35Z | con/1    |  1252 |   8258876 |\n+----------------------+----------+-------+-----------+\n</code></pre> <pre><code>created,sourceId,watts,wattHours\n2025-09-05T06:39:35Z,con/1,3087,8259410\n2025-09-05T06:39:55.227Z,con/pcm,3270,8259700\n</code></pre> <pre><code>{\n    \"ts\" : \"2025-09-05 06:40:25.732246Z\",\n    \"body\" : {\n        \"created\" : \"2025-09-05 06:40:25.227Z\",\n        \"sourceId\" : \"con/pcm\",\n        \"watts\" : \"2653\",\n        \"wattHours\" : \"8259722\"\n    },\n    \"topic\" : \"user/123/node/101/datum/0/con/pcm\"\n}\n{\n    \"ts\" : \"2025-09-05 06:40:35.511049Z\",\n    \"body\" : {\n        \"created\" : \"2025-09-05 06:40:35Z\",\n        \"sourceId\" : \"con/1\",\n        \"watts\" : \"3363\",\n        \"wattHours\" : \"8259466\"\n    },\n    \"topic\" : \"user/123/node/101/datum/0/con/1\"\n}\n</code></pre> <p>Monitor OCPP inbound message events for charger:</p> Tail OCPP charger eventsJSON Output <pre><code>s10k flux tail --display-mode JSON \\\n  --topic user/123/event/ocpp/message/received \\\n  |jq 'select(.body.data.cp == \"chgr123\") | .body.data'\n</code></pre> <pre><code>{\n    \"cp\": \"chgr123\",\n    \"messageId\": \"3ed43c9f-7fc2-4ed8-ac51-70e1987e8e80\",\n    \"action\": \"MeterValues\",\n    \"message\": {\n        \"connectorId\": 2,\n        \"transactionId\": 257979,\n        \"meterValue\": [\n            {\n                \"timestamp\": \"2025-09-07T04:51:43.000+00:00\",\n                \"sampledValue\": [\n                {\n                    \"value\": \"289314130\",\n                    \"context\": \"Sample.Periodic\",\n                    \"format\": \"Raw\",\n                    \"measurand\": \"Energy.Active.Import.Register\",\n                    \"location\": \"Outlet\",\n                    \"unit\": \"Wh\"\n                }\n                {\n                    \"value\": \"3498.0\",\n                    \"context\": \"Sample.Periodic\",\n                    \"measurand\": \"Power.Active.Import\",\n                    \"location\": \"Outlet\",\n                    \"unit\": \"W\"\n                }\n                ]\n            }\n        ]\n    }\n}\n{\n    \"cp\": \"chgr123\",\n    \"messageId\": \"d8551a59-4cf5-4958-8487-ca2dedfcb21a\",\n    \"action\": \"Heartbeat\"\n}\n</code></pre>"},{"location":"commands/instructions/","title":"Instructions Commands","text":"<p>The <code>instructions</code> group of commands deal with SolarNode instructions, which are actions you can ask a node to perform, and the node confirms the outcome of the action, possibly providing result data.</p> <p>Instructions in SolarNetwork have a topic that is the name of an action the node should perform. Examples of topics are <code>SetControlParameter</code> to set a control to some value, or <code>SystemReboot</code> to reboot the node device.</p> <p>Instructions then have an associated state that evolves over the lifetime of the instruction. In general an instruction transitions between the following states:</p> State Description <code>Queuing</code> The instruction is being queued for delivery to the node, but not acknowledged by the node yet. <code>Queued</code> The instruction has been queued for delivery to the node, but not acknowledged by the node yet. <code>Received</code> The instruction has been delivered to the node and the node has acknowledged receiving the instruction, but has not been executed yet. <code>Executing</code> The node is currently executing the instruction. <code>Completed</code> The node has finished executing the instruction. <p>There is also a <code>Declined</code> state, when the node has rejected the instruction and will not execute it.</p> <p>Instructions are processed asynchronously, and instructions proceed through these states over time as instructions created in SolarNetwork and then transmitted to the node, executed on the node, and finally reported as <code>Completed</code> or <code>Declined</code>.</p> <p>For more details on how instructions work, see here.</p> <p>Info</p> <p>Instruction records are purged from SolarNetwork automatically over time, once they reach their final <code>Completed</code> or <code>Declined</code> state.</p>"},{"location":"commands/instructions/list-components/","title":"Instructions List-Components","text":"<p>List the available components on a node.</p>"},{"location":"commands/instructions/list-components/#usage","title":"Usage","text":"<pre><code>s10k instructions list-components -node=&lt;nodeId&gt; [-mode=&lt;displayMode&gt;]\n</code></pre>"},{"location":"commands/instructions/list-components/#options","title":"Options","text":"Option Long Version Description <code>-node=</code> <code>--node-id=</code> the node ID to list the control IDs for <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code>"},{"location":"commands/instructions/list-components/#output","title":"Output","text":"<p>A listing of available component records.</p>"},{"location":"commands/instructions/list-components/#examples","title":"Examples","text":"<p>You can list all available components on a node like this:</p> Show available componentsPretty outputCSV outputJSON output <pre><code>s10k instructions list-components --node-id 101\n</code></pre> <pre><code>+------------------------------------------------------+--------------------------------------------+\n| ID                                                   | Title                                      |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.control.modbus                 | Modbus Control                             |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.control.opmode.opstatemgr      | Operational State Manager                  |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.control.opmode.switch          | Operational Mode Switch                    |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.control                  | Control Datum Source                       |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.filter.control.update    | Control Updater Datum Filter               |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.filter.std.join          | Join Datum Filter                          |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.filter.std.param         | Parameter Expression Datum Filter          |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.filter.std.split         | Split Datum Filter                         |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.filter.std.unchanged     | Unchanged Datum Filter                     |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.filter.std.unchangedprop | Unchanged Property Filter                  |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.filter.tariff            | Time-based Tariff Datum Filter             |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.modbus                   | Modbus Device                              |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.opmode.invoker           | Datum Data Source Operational Mode Invoker |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.samplefilter.downsample  | Downsample Datum Filter                    |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.samplefilter.expression  | Expression Datum Filter                    |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.samplefilter.limiter     | Throttle Datum Filter                      |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.samplefilter.opmode      | Operational Mode Datum Filter              |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.samplefilter.prop        | Property Datum Filter                      |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.samplefilter.simple      | Datum Property Global Filter               |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.samplefilter.throttle    | Datum Throttle Global Filter               |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.samplefilter.virtmeter   | Virtual Meter Datum Filter                 |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.datum.xform.user               | Datum Filter Chain                         |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.io.modbus                      | Modbus serial connection                   |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.io.modbus.tcp                  | Modbus TCP connection                      |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.metadata.user                  | User Metadata Service                      |\n+------------------------------------------------------+--------------------------------------------+\n| net.solarnetwork.node.upload.flux                    | SolarFlux Upload Service                   |\n+------------------------------------------------------+--------------------------------------------+\n</code></pre> <pre><code>ID,Title\nnet.solarnetwork.node.control.modbus,Modbus Control\nnet.solarnetwork.node.control.opmode.opstatemgr,Operational State Manager\nnet.solarnetwork.node.control.opmode.switch,Operational Mode Switch\nnet.solarnetwork.node.datum.control,Control Datum Source\nnet.solarnetwork.node.datum.filter.control.update,Control Updater Datum Filter\nnet.solarnetwork.node.datum.filter.std.join,Join Datum Filter\nnet.solarnetwork.node.datum.filter.std.param,Parameter Expression Datum Filter\nnet.solarnetwork.node.datum.filter.std.split,Split Datum Filter\nnet.solarnetwork.node.datum.filter.std.unchanged,Unchanged Datum Filter\nnet.solarnetwork.node.datum.filter.std.unchangedprop,Unchanged Property Filter\nnet.solarnetwork.node.datum.filter.tariff,Time-based Tariff Datum Filter\nnet.solarnetwork.node.datum.modbus,Modbus Device\nnet.solarnetwork.node.datum.opmode.invoker,Datum Data Source Operational Mode Invoker\nnet.solarnetwork.node.datum.samplefilter.downsample,Downsample Datum Filter\nnet.solarnetwork.node.datum.samplefilter.expression,Expression Datum Filter\nnet.solarnetwork.node.datum.samplefilter.limiter,Throttle Datum Filter\nnet.solarnetwork.node.datum.samplefilter.opmode,Operational Mode Datum Filter\nnet.solarnetwork.node.datum.samplefilter.prop,Property Datum Filter\nnet.solarnetwork.node.datum.samplefilter.simple,Datum Property Global Filter\nnet.solarnetwork.node.datum.samplefilter.throttle,Datum Throttle Global Filter\nnet.solarnetwork.node.datum.samplefilter.virtmeter,Virtual Meter Datum Filter\nnet.solarnetwork.node.datum.xform.user,Datum Filter Chain\nnet.solarnetwork.node.io.modbus,Modbus serial connection\nnet.solarnetwork.node.io.modbus.tcp,Modbus TCP connection\nnet.solarnetwork.node.metadata.user,User Metadata Service\nnet.solarnetwork.node.upload.flux,SolarFlux Upload Service\n</code></pre> <pre><code>[\n    {\n        \"id\": \"net.solarnetwork.node.control.modbus\",\n        \"title\": \"Modbus Control\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.control.opmode.opstatemgr\",\n        \"title\": \"Operational State Manager\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.control.opmode.switch\",\n        \"title\": \"Operational Mode Switch\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.control\",\n        \"title\": \"Control Datum Source\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.filter.control.update\",\n        \"title\": \"Control Updater Datum Filter\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.filter.std.join\",\n        \"title\": \"Join Datum Filter\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.filter.std.param\",\n        \"title\": \"Parameter Expression Datum Filter\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.filter.std.split\",\n        \"title\": \"Split Datum Filter\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.filter.std.unchanged\",\n        \"title\": \"Unchanged Datum Filter\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.filter.std.unchangedprop\",\n        \"title\": \"Unchanged Property Filter\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.filter.tariff\",\n        \"title\": \"Time-based Tariff Datum Filter\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.modbus\",\n        \"title\": \"Modbus Device\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.opmode.invoker\",\n        \"title\": \"Datum Data Source Operational Mode Invoker\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.samplefilter.downsample\",\n        \"title\": \"Downsample Datum Filter\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.samplefilter.expression\",\n        \"title\": \"Expression Datum Filter\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.samplefilter.limiter\",\n        \"title\": \"Throttle Datum Filter\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.samplefilter.opmode\",\n        \"title\": \"Operational Mode Datum Filter\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.samplefilter.prop\",\n        \"title\": \"Property Datum Filter\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.samplefilter.simple\",\n        \"title\": \"Datum Property Global Filter\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.samplefilter.throttle\",\n        \"title\": \"Datum Throttle Global Filter\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.samplefilter.virtmeter\",\n        \"title\": \"Virtual Meter Datum Filter\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.xform.user\",\n        \"title\": \"Datum Filter Chain\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.io.modbus\",\n        \"title\": \"Modbus serial connection\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.io.modbus.tcp\",\n        \"title\": \"Modbus TCP connection\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.metadata.user\",\n        \"title\": \"User Metadata Service\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.upload.flux\",\n        \"title\": \"SolarFlux Upload Service\"\n    }\n]\n</code></pre>"},{"location":"commands/instructions/list-controls/","title":"Instructions List-Controls","text":"<p>List the available control IDs on a node.</p>"},{"location":"commands/instructions/list-controls/#usage","title":"Usage","text":"<pre><code>s10k instructions list-controls -node=&lt;nodeId&gt; [-filter=&lt;filter&gt;]\n                                [-mode=&lt;displayMode&gt;]\n</code></pre>"},{"location":"commands/instructions/list-controls/#options","title":"Options","text":"Option Long Version Description <code>-node=</code> <code>--node-id=</code> the node ID to list the control IDs for <code>-filter=</code> <code>--filter=</code> a wildcard pattern to restrict the results to <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code>"},{"location":"commands/instructions/list-controls/#output","title":"Output","text":"<p>A listing of all matching control IDs.</p>"},{"location":"commands/instructions/list-controls/#examples","title":"Examples","text":"<p>You can list all available control IDs on a node like this:</p> Show available controlsPretty outputCSV outputJSON output <pre><code>s10k instructions list-controls --node-id 101\n</code></pre> <pre><code>+------------+\n| Control ID |\n+------------+\n| pcm/limit  |\n+------------+\n| switch/1   |\n+------------+\n</code></pre> <pre><code>Control ID\npcm/limit\nswitch/1\n</code></pre> <pre><code>[\n    \"test/pcm/limit\",\n    \"test/switch/1\"\n]\n</code></pre> <p>You could use the output of this command to find the current (reported) values of all node controls with the datum list command like this:</p> Show current value of available controlsPretty outputCSV outputJSON output <pre><code>s10k datum list --node-id 101 --most-recent --source-id $( \\\n    s10k instructions list-controls --node-id 101 \\\n      --display-mode JSON |jq -r 'join(\",\")'\n)\n</code></pre> <pre><code>+--------------------------+-----------+-----------+-----+-----+\n| Timestamp                | Object ID | Source ID | v   | val |\n+--------------------------+-----------+-----------+-----+-----+\n| 2025-09-08T04:19:10.194Z | 101       | pcm/limit | 100 | 100 |\n+--------------------------+-----------+-----------+-----+-----+\n| 2025-09-08T04:19:10.139Z | 101       | switch/1  |   0 |     |\n+--------------------------+-----------+-----------+-----+-----+\n</code></pre> <pre><code>ts,streamId,objectId,sourceId,v,val,tags\n2025-09-08T04:19:10.194Z,c8560910-9920-4d57-a1a9-d4e4722cbcdd,101,pcm/limit,100,100,\n2025-09-08T04:19:10.139Z,f68e81cd-2ac3-4760-b449-16ebce64c15a,101,switch/1,,0,\n</code></pre> <pre><code>{\n    \"success\": true,\n    \"meta\": [\n        {\n            \"streamId\": \"c8560910-9920-4d57-a1a9-d4e4722cbcdd\",\n            \"zone\": \"Pacific/Auckland\",\n            \"kind\": \"n\",\n            \"objectId\": 101,\n            \"sourceId\": \"pcm/limit\",\n            \"i\": [\n                \"v\"\n            ],\n            \"s\": [\n                \"val\"\n            ]\n        },\n        {\n            \"streamId\": \"f68e81cd-2ac3-4760-b449-16ebce64c15a\",\n            \"zone\": \"Pacific/Auckland\",\n            \"kind\": \"n\",\n            \"objectId\": 101,\n            \"sourceId\": \"switch/1\",\n            \"s\": [\n                \"val\"\n            ]\n        }\n    ],\n    \"data\": [\n        [\n            0,\n            1757305150194,\n            100,\n            \"100\"\n        ],\n        [\n            1,\n            1757305150139,\n            \"0\"\n        ]\n    ]\n}\n</code></pre>"},{"location":"commands/instructions/list-packages/","title":"Instructions List-Packages","text":"<p>List the installed and/or available software packages on a node.</p>"},{"location":"commands/instructions/list-packages/#usage","title":"Usage","text":"<pre><code>s10k instructions list-packages -node=&lt;nodeId&gt; [-filter=&lt;filter&gt;]\n                                [-s=&lt;packageStatus&gt;]\n                                [-mode=&lt;displayMode&gt;]\n</code></pre>"},{"location":"commands/instructions/list-packages/#options","title":"Options","text":"Option Long Version Description <code>-node=</code> <code>--node-id=</code> the node ID to list the control IDs for <code>-filter=</code> <code>--filter=</code> a regular expression to apply against package names to restrict the results to; defaults to <code>^(sn-|solarnode)</code> <code>-s</code> <code>--status</code> the package status to restrict results to, one of <code>Installed</code>, <code>Available</code>, or <code>All</code>; defaults to <code>Installed</code> <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code>"},{"location":"commands/instructions/list-packages/#output","title":"Output","text":"<p>A listing of all matching package records.</p>"},{"location":"commands/instructions/list-packages/#examples","title":"Examples","text":"<p>You can list all installed packages on a node like this:</p> Show installed packagesPretty outputCSV outputJSON output <pre><code>s10k instructions list-packages --node-id 101\n</code></pre> <pre><code>+--------------------------------------+----------+-----------+\n| Name                                 | Version  | Installed |\n+--------------------------------------+----------+-----------+\n| sn-mbpoll                            |  1.5.2-1 |      true |\n+--------------------------------------+----------+-----------+\n| sn-nftables                          |  1.1.2-1 |      true |\n+--------------------------------------+----------+-----------+\n| sn-osstat                            |  1.1.0-2 |      true |\n+--------------------------------------+----------+-----------+\n| sn-pi                                |  1.2.0-1 |      true |\n+--------------------------------------+----------+-----------+\n| sn-pi-usb-support                    |  1.2.0-1 |      true |\n+--------------------------------------+----------+-----------+\n| sn-solarpkg                          |  1.3.0-1 |      true |\n+--------------------------------------+----------+-----------+\n| sn-solarssh                          |  1.0.0-4 |      true |\n+--------------------------------------+----------+-----------+\n| sn-system                            |  1.7.1-1 |      true |\n+--------------------------------------+----------+-----------+\n| solarnode-app-control-core           |  2.1.0-1 |      true |\n+--------------------------------------+----------+-----------+\n| solarnode-app-core                   |  4.0.2-1 |      true |\n+--------------------------------------+----------+-----------+\n| solarnode-app-datumfilters           |  2.0.0-1 |      true |\n+--------------------------------------+----------+-----------+\n| solarnode-app-db-h2                  |  3.0.0-1 |      true |\n+--------------------------------------+----------+-----------+\n| solarnode-app-io-modbus              |  4.0.0-1 |      true |\n+--------------------------------------+----------+-----------+\n| solarnode-app-io-modbus-nifty-pjc    |  2.0.0-1 |      true |\n+--------------------------------------+----------+-----------+\n| solarnode-app-io-mqtt                |  5.0.0-1 |      true |\n+--------------------------------------+----------+-----------+\n| solarnode-app-io-mqtt-netty          |  5.0.0-1 |      true |\n+--------------------------------------+----------+-----------+\n| solarnode-app-modbus                 |  2.1.0-1 |      true |\n+--------------------------------------+----------+-----------+\n| solarnode-app-solarflux              |  2.0.0-1 |      true |\n+--------------------------------------+----------+-----------+\n| solarnode-base                       |  5.0.0-2 |      true |\n+--------------------------------------+----------+-----------+\n</code></pre> <pre><code>Name,Version,Installed\nsn-mbpoll,1.5.2-1,true\nsn-nftables,1.1.2-1,true\nsn-osstat,1.1.0-2,true\nsn-pi,1.2.0-1,true\nsn-pi-usb-support,1.2.0-1,true\nsn-solarpkg,1.3.0-1,true\nsn-solarssh,1.0.0-4,true\nsn-system,1.7.1-1,true\nsolarnode-app-control-core,2.1.0-1,true\nsolarnode-app-core,4.0.2-1,true\nsolarnode-app-datumfilters,2.0.0-1,true\nsolarnode-app-db-h2,3.0.0-1,true\nsolarnode-app-io-modbus,4.0.0-1,true\nsolarnode-app-io-modbus-nifty-pjc,2.0.0-1,true\nsolarnode-app-io-mqtt,5.0.0-1,true\nsolarnode-app-io-mqtt-netty,5.0.0-1,true\nsolarnode-app-modbus,2.1.0-1,true\nsolarnode-app-solarflux,2.0.0-1,true\nsolarnode-base,5.0.0-2,true\n</code></pre> <pre><code>[\n    {\n        \"name\": \"sn-mbpoll\",\n        \"version\": \"1.5.2-1\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"sn-nftables\",\n        \"version\": \"1.1.2-1\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"sn-osstat\",\n        \"version\": \"1.1.0-2\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"sn-pi\",\n        \"version\": \"1.2.0-1\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"sn-pi-usb-support\",\n        \"version\": \"1.2.0-1\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"sn-solarpkg\",\n        \"version\": \"1.3.0-1\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"sn-solarssh\",\n        \"version\": \"1.0.0-4\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"sn-system\",\n        \"version\": \"1.7.1-1\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"solarnode-app-control-core\",\n        \"version\": \"2.1.0-1\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"solarnode-app-core\",\n        \"version\": \"4.0.2-1\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"solarnode-app-datumfilters\",\n        \"version\": \"2.0.0-1\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"solarnode-app-db-h2\",\n        \"version\": \"3.0.0-1\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"solarnode-app-io-modbus\",\n        \"version\": \"4.0.0-1\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"solarnode-app-io-modbus-nifty-pjc\",\n        \"version\": \"2.0.0-1\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"solarnode-app-io-mqtt\",\n        \"version\": \"5.0.0-1\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"solarnode-app-io-mqtt-netty\",\n        \"version\": \"5.0.0-1\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"solarnode-app-modbus\",\n        \"version\": \"2.1.0-1\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"solarnode-app-solarflux\",\n        \"version\": \"2.0.0-1\",\n        \"installed\": true\n    },\n    {\n        \"name\": \"solarnode-base\",\n        \"version\": \"5.0.0-2\",\n        \"installed\": true\n    },\n]\n</code></pre>"},{"location":"commands/instructions/list-services/","title":"Instructions List-Services","text":"<p>List the available services or component instances on a node.</p>"},{"location":"commands/instructions/list-services/#usage","title":"Usage","text":"<pre><code>s10k instructions list-services -node=&lt;nodeId&gt; [-c=&lt;componentId&gt;]\n                                [-mode=&lt;displayMode&gt;]\n</code></pre>"},{"location":"commands/instructions/list-services/#options","title":"Options","text":"Option Long Version Description <code>-node=</code> <code>--node-id=</code> the node ID to list the control IDs for <code>-c=</code> <code>--component-id=</code> a component ID to list the available service instances for <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code>"},{"location":"commands/instructions/list-services/#output","title":"Output","text":"<p>A listing of available service records.</p>"},{"location":"commands/instructions/list-services/#examples","title":"Examples","text":"<p>You can list all available services on a node like this:</p> Show available servicesPretty outputCSV outputJSON output <pre><code>s10k instructions list-services --node-id 101\n</code></pre> <pre><code>+---------------------------------------------------------------------------+------------------------------------+\n| ID                                                                        | Title                              |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.backup.DefaultBackupManager                         | Backup Manager                     |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.backup.s3.S3BackupService                           | S3 Backup Service                  |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.control.modbus.csv                                  | Modbus Control CSV Configurer      |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.dao.jdbc.general.datum                              | Datum Persistence (JDBC)           |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.dao.jdbc.h2.backup                                  | Database Backup                    |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.dao.jdbc.locstate                                   | Local State Persistence (JDBC)     |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.dao.jdbc.trim                                       | General Datum Jobs                 |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.datum.modbus.csv                                    | Modbus Device CSV Configurer       |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.datum.xform.solarin                                 | Global Datum Filter Chain          |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.job.BackupJob                                       | Core Jobs                          |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.location.ws                                         | Location Service (SolarNet)        |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.metadata.json                                       | Node Metadata Service (SolarNet)   |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.metadata.json.JsonDatumMetadataService              | Source Metadata Service (SolarNet) |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.reactor.simple                                      | Reactor Jobs                       |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.runtime.DefaultOperationalModesService              | Operational Modes Service          |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.runtime.dq                                          | Datum Queue                        |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.settings.ca.backup                                  | Settings Local Backup              |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.system.cmdline.CmdlineSystemService                 | System Service                     |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.system.ssh.RemoteSshService                         | Remote SSH Service                 |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.upload.bulkjsonwebpost                              | SolarIn/HTTP Upload Service Jobs   |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.upload.bulkjsonwebpost.BulkJsonWebPostUploadService | SolarIn/HTTP Upload Service        |\n+---------------------------------------------------------------------------+------------------------------------+\n| net.solarnetwork.node.upload.mqtt                                         | SolarIn/MQTT Integration           |\n+---------------------------------------------------------------------------+------------------------------------+\n</code></pre> <pre><code>ID,Title\nnet.solarnetwork.node.backup.DefaultBackupManager,Backup Manager\nnet.solarnetwork.node.backup.s3.S3BackupService,S3 Backup Service\nnet.solarnetwork.node.control.modbus.csv,Modbus Control CSV Configurer\nnet.solarnetwork.node.dao.jdbc.general.datum,Datum Persistence (JDBC)\nnet.solarnetwork.node.dao.jdbc.h2.backup,Database Backup\nnet.solarnetwork.node.dao.jdbc.locstate,Local State Persistence (JDBC)\nnet.solarnetwork.node.dao.jdbc.trim,General Datum Jobs\nnet.solarnetwork.node.datum.modbus.csv,Modbus Device CSV Configurer\nnet.solarnetwork.node.datum.xform.solarin,Global Datum Filter Chain\nnet.solarnetwork.node.job.BackupJob,Core Jobs\nnet.solarnetwork.node.location.ws,Location Service (SolarNet)\nnet.solarnetwork.node.metadata.json,Node Metadata Service (SolarNet)\nnet.solarnetwork.node.metadata.json.JsonDatumMetadataService,Source Metadata Service (SolarNet)\nnet.solarnetwork.node.reactor.simple,Reactor Jobs\nnet.solarnetwork.node.runtime.DefaultOperationalModesService,Operational Modes Service\nnet.solarnetwork.node.runtime.dq,Datum Queue\nnet.solarnetwork.node.settings.ca.backup,Settings Local Backup\nnet.solarnetwork.node.system.cmdline.CmdlineSystemService,System Service\nnet.solarnetwork.node.system.ssh.RemoteSshService,Remote SSH Service\nnet.solarnetwork.node.upload.bulkjsonwebpost,SolarIn/HTTP Upload Service Jobs\nnet.solarnetwork.node.upload.bulkjsonwebpost.BulkJsonWebPostUploadService,SolarIn/HTTP Upload Service\nnet.solarnetwork.node.upload.mqtt,SolarIn/MQTT Integration\n</code></pre> <pre><code>[\n    {\n        \"id\": \"net.solarnetwork.node.backup.DefaultBackupManager\",\n        \"title\": \"Backup Manager\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.backup.s3.S3BackupService\",\n        \"title\": \"S3 Backup Service\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.control.modbus.csv\",\n        \"title\": \"Modbus Control CSV Configurer\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.dao.jdbc.general.datum\",\n        \"title\": \"Datum Persistence (JDBC)\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.dao.jdbc.h2.backup\",\n        \"title\": \"Database Backup\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.dao.jdbc.locstate\",\n        \"title\": \"Local State Persistence (JDBC)\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.dao.jdbc.trim\",\n        \"title\": \"General Datum Jobs\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.modbus.csv\",\n        \"title\": \"Modbus Device CSV Configurer\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.datum.xform.solarin\",\n        \"title\": \"Global Datum Filter Chain\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.job.BackupJob\",\n        \"title\": \"Core Jobs\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.location.ws\",\n        \"title\": \"Location Service (SolarNet)\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.metadata.json\",\n        \"title\": \"Node Metadata Service (SolarNet)\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.metadata.json.JsonDatumMetadataService\",\n        \"title\": \"Source Metadata Service (SolarNet)\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.reactor.simple\",\n        \"title\": \"Reactor Jobs\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.runtime.DefaultOperationalModesService\",\n        \"title\": \"Operational Modes Service\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.runtime.dq\",\n        \"title\": \"Datum Queue\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.settings.ca.backup\",\n        \"title\": \"Settings Local Backup\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.system.cmdline.CmdlineSystemService\",\n        \"title\": \"System Service\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.system.ssh.RemoteSshService\",\n        \"title\": \"Remote SSH Service\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.upload.bulkjsonwebpost\",\n        \"title\": \"SolarIn/HTTP Upload Service Jobs\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.upload.bulkjsonwebpost.BulkJsonWebPostUploadService\",\n        \"title\": \"SolarIn/HTTP Upload Service\"\n    },\n    {\n        \"id\": \"net.solarnetwork.node.upload.mqtt\",\n        \"title\": \"SolarIn/MQTT Integration\"\n    }\n]\n</code></pre> <p>You can show the avaialble component instances with the <code>--component-id</code> option:</p> Show available component instancesPretty outputCSV outputJSON output <pre><code>s10k instructions list-services --node-id 101 \\\n  --component-id net.solarnetwork.node.datum.control\n</code></pre> <pre><code>+-------------------------------------+----------+\n| ID                                  | Instance |\n+-------------------------------------+----------+\n| net.solarnetwork.node.datum.control | 1        |\n+-------------------------------------+----------+\n</code></pre> <pre><code>ID,Title\nnet.solarnetwork.node.datum.control,1\n</code></pre> <pre><code>[\n    {\n        \"id\": \"net.solarnetwork.node.datum.control\",\n        \"title\": \"1\"\n    }\n]\n</code></pre>"},{"location":"commands/instructions/list/","title":"Instructions List","text":"<p>Show instructions matching a search filter.</p>"},{"location":"commands/instructions/list/#usage","title":"Usage","text":"<pre><code>s10k instructions list [-max=&lt;maxDate&gt;] [-min=&lt;minDate&gt;] [-tz=&lt;zone&gt;]\n                       [-id=instructionId[,instructionId...]]...\n                       [-node=nodeId[,nodeId...]]...\n                       [-state=state[,state...]]...\n</code></pre>"},{"location":"commands/instructions/list/#options","title":"Options","text":"Option Long Version Description <code>-id=</code> <code>--instruction-id=</code> the instruction ID(s) to show <code>-node=</code> <code>--node-id=</code> the node ID to show instructions for <code>-state=</code> <code>--state=</code> an instruction state to limit results to <code>-min=</code> <code>--min-date=</code> a minimum date to limit results to, like <code>2020-10-30</code> or <code>2020-10-30T12:45</code> <code>-max=</code> <code>--max-date=</code> a maximum date (exclusive) to limit results to, in same form as <code>-min</code> <code>-tz=</code> <code>--time-zone=</code> a time zone ID to treat the min/max dates as, instead of the local time zone, like <code>Pacific/Auckland</code> or <code>-05:00</code> or <code>UTC</code>"},{"location":"commands/instructions/list/#output","title":"Output","text":"<p>A listing of all matching instruction records.</p>"},{"location":"commands/instructions/list/#examples","title":"Examples","text":"<p>You can show one exact instruction using its ID like this:</p> Show instruction for IDOutput <pre><code>s10k instructions list --node-id 101 --instruction-id 123\n</code></pre> <pre><code>Property Value\n-----------------------------------------------------------\nid       123\ntopic    SetControlParameter\nstate    Completed\ndate     2025-08-30T17:11:01.741346+12:00[Pacific/Auckland]\nparams   Parameter     Value\n         -------------------\n         switch/1      1\n</code></pre> <p>You can show all instructions</p> Show completed instructions for nodeOutput <pre><code># using multiple options\ns10k instructions list --node-id 101 --state Completed\n</code></pre> <pre><code>Property Value\n-----------------------------------------------------------\nid       123\ntopic    SetControlParameter\nstate    Completed\ndate     2025-08-27T18:08:16.858044+12:00[Pacific/Auckland]\nparams   Parameter     Value\n         -------------------\n         switch/1      1\n\nProperty Value\n-----------------------------------------------------------\nid       124\ntopic    SetControlParameter\nstate    Completed\ndate     2025-08-27T18:10:14.521734+12:00[Pacific/Auckland]\nparams   Parameter     Value\n         -------------------\n         switch/1      0\n</code></pre>"},{"location":"commands/instructions/toggle-op-mode/","title":"Instructions Toggle-Op-Mode","text":"<p>Enable or disable operating modes on a SolarNode. Pass one or more modes as parameters.</p> <p>Info</p> <p>For more details on the SolarNetwork APIs used by this command, see the documentation for the EnableOperationalModes and DisableOperationalModes instruction topics.</p>"},{"location":"commands/instructions/toggle-op-mode/#usage","title":"Usage","text":"<pre><code>s10k instructions toggle-op-mode [-d] -node=&lt;nodeId&gt;\n                                [--mode-expiration=&lt;modeExpiration&gt;]\n                                [-x=&lt;expiration&gt;] [-X=&lt;executionDate&gt;]\n                                [-tz=&lt;zone&gt;] mode...\n</code></pre>"},{"location":"commands/instructions/toggle-op-mode/#options","title":"Options","text":"Option Long Version Description <code>-d</code> <code>--disable</code> disable the given operating modes, intead of enabling <code>-node=</code> <code>--node-id=</code> the node ID with the control to update <code>--mode-expiration=</code> when enabling operating modes, a date to automatically disable the mode at, like <code>2020-10-30</code> or <code>2020-10-30T12:45</code> <code>-x=</code> <code>--expiration=</code> a date to automatically transition the instruction to <code>Declined</code> if not already completed, like <code>2020-10-30</code> or <code>2020-10-30T12:45</code> <code>-X=</code> <code>--exec-at=</code> a date to defer instruction execution until, like <code>2020-10-30</code> or <code>2020-10-30T12:45</code> <code>-tz=</code> <code>--time-zone=</code> a time zone ID to treat all date options as, instead of the local time zone, like <code>Pacific/Auckland</code> or <code>-05:00</code> or <code>UTC</code>"},{"location":"commands/instructions/toggle-op-mode/#output","title":"Output","text":"<p>A status message about the result of the instruction.</p>"},{"location":"commands/instructions/toggle-op-mode/#examples","title":"Examples","text":"<p>Enable the \"hyper\" operating mode:</p> Enable <code>hyper</code> operating modeOutput <pre><code>s10k instructions toggle-op-mode --node-id 101 hyper\n</code></pre> <pre><code>Enabled operational modes [hyper].\n</code></pre> <p>Disable the \"hyper\" operating mode:</p> Disable <code>hyper</code> operating modeOutput <pre><code>s10k instructions toggle-op-mode --node-id 101 --disable hyper\n</code></pre> <pre><code>Disabled operational modes [hyper].\n</code></pre>"},{"location":"commands/instructions/update-state/","title":"Instructions Update-State","text":"<p>Change the state of instructions matching a search filter. Pass the desired instruction state as the first (and only) parameter.</p>"},{"location":"commands/instructions/update-state/#usage","title":"Usage","text":"<pre><code>s10k instructions update-state [-max=&lt;maxDate&gt;] [-min=&lt;minDate&gt;] [-tz=&lt;zone&gt;]\n                       [-id=instructionId[,instructionId...]]...\n                       [-node=nodeId[,nodeId...]]...\n                       [-state=state[,state...]]...\n                       &lt;desiredState&gt;\n</code></pre>"},{"location":"commands/instructions/update-state/#options","title":"Options","text":"Option Long Version Description <code>-id=</code> <code>--instruction-id=</code> the instruction ID(s) to show <code>-node=</code> <code>--node-id=</code> the node ID to show instructions for <code>-state=</code> <code>--state=</code> an instruction state to limit results to <code>-min=</code> <code>--min-date=</code> a minimum date to limit results to, like <code>2020-10-30</code> or <code>2020-10-30T12:45</code> <code>-max=</code> <code>--max-date=</code> a maximum date (exclusive) to limit results to, in same form as <code>-min</code> <code>-tz=</code> <code>--time-zone=</code> a time zone ID to treat the min/max dates as, instead of the local time zone, like <code>Pacific/Auckland</code> or <code>-05:00</code> or <code>UTC</code>"},{"location":"commands/instructions/update-state/#output","title":"Output","text":"<p>A listing of all matching instruction records.</p>"},{"location":"commands/instructions/update-state/#examples","title":"Examples","text":"<p>Update a set of <code>Queued</code> instructions in a date range to <code>Declined</code>:</p> Show instruction for IDOutput <pre><code>s10k instructions update-state --node-id 1011 --state Declined Received\n</code></pre> <pre><code>Updated 6 instructions to Declined: 123,124,125,126,127,128\n</code></pre>"},{"location":"commands/instructions/controls/set-operating-state/","title":"Instructions Controls Set-Operating-State","text":"<p>Update the operating state of a SolarNode component. Pass the desired operating state as the first (and only) parameter.</p>"},{"location":"commands/instructions/controls/set-operating-state/#usage","title":"Usage","text":"<pre><code>s10k instructions controls set-operating-state -node=&lt;nodeId&gt;\n                            -control=&lt;controlId&gt;\n                            [-x=&lt;expiration&gt;] [-X=&lt;executionDate&gt;]\n                            [-tz=&lt;zone&gt;] desiredState\n</code></pre>"},{"location":"commands/instructions/controls/set-operating-state/#options","title":"Options","text":"Option Long Version Description <code>-node=</code> <code>--node-id=</code> the node ID with the control to update <code>-control=</code> <code>--control-id=</code> the control ID to update <code>-x=</code> <code>--expiration=</code> a date to automatically transition the instruction to <code>Declined</code> if not already completed, like <code>2020-10-30</code> or <code>2020-10-30T12:45</code> <code>-X=</code> <code>--exec-at=</code> a date to defer instruction execution until, like <code>2020-10-30</code> or <code>2020-10-30T12:45</code> <code>-tz=</code> <code>--time-zone=</code> a time zone ID to treat all date options as, instead of the local time zone, like <code>Pacific/Auckland</code> or <code>-05:00</code> or <code>UTC</code>"},{"location":"commands/instructions/controls/set-operating-state/#output","title":"Output","text":"<p>A status message about the result of the instruction.</p>"},{"location":"commands/instructions/controls/set-operating-state/#examples","title":"Examples","text":"<p>Update a component to \"standby\" mode:</p> Set component operating stateOutput <pre><code>s10k instructions controls set-operating-state --node-id 101 \\\n  --control-id pump/1 Standby\n</code></pre> <pre><code>Control [pump/1] operating state set to [Standby]\n</code></pre>"},{"location":"commands/instructions/controls/set/","title":"Instructions Controls Set","text":"<p>Update the value of a SolarNode control. Pass the desired control value as the first (and only) parameter.</p>"},{"location":"commands/instructions/controls/set/#usage","title":"Usage","text":"<pre><code>s10k instructions controls set -node=&lt;nodeId&gt; -control=&lt;controlId&gt;\n                            [-x=&lt;expiration&gt;] [-X=&lt;executionDate&gt;]\n                            [-tz=&lt;zone&gt;] desiredValue\n</code></pre>"},{"location":"commands/instructions/controls/set/#options","title":"Options","text":"Option Long Version Description <code>-node=</code> <code>--node-id=</code> the node ID with the control to update <code>-control=</code> <code>--control-id=</code> the control ID to update <code>-x=</code> <code>--expiration=</code> a date to automatically transition the instruction to <code>Declined</code> if not already completed, like <code>2020-10-30</code> or <code>2020-10-30T12:45</code> <code>-X=</code> <code>--exec-at=</code> a date to defer instruction execution until, like <code>2020-10-30</code> or <code>2020-10-30T12:45</code> <code>-tz=</code> <code>--time-zone=</code> a time zone ID to treat all date options as, instead of the local time zone, like <code>Pacific/Auckland</code> or <code>-05:00</code> or <code>UTC</code>"},{"location":"commands/instructions/controls/set/#output","title":"Output","text":"<p>A status message about the result of the instruction.</p>"},{"location":"commands/instructions/controls/set/#examples","title":"Examples","text":"<p>Update a switch-type boolean control to \"on\" (using <code>1</code> to represent \"on\"):</p> Set boolean control to 'on'Output <pre><code>s10k instructions controls set --node-id 101 \\\n  --control-id switch/1 1\n</code></pre> <pre><code>Control [switch/1] set to [1]\n</code></pre>"},{"location":"commands/instructions/controls/signal/","title":"Instructions Controls Signal","text":"<p>Send a named \"signal\" to a SolarNode control. Pass the desired signal name as the first (and only) parameter.</p>"},{"location":"commands/instructions/controls/signal/#usage","title":"Usage","text":"<pre><code>s10k instructions controls signal -node=&lt;nodeId&gt;\n                            -control=&lt;controlId&gt;\n                            [-x=&lt;expiration&gt;] [-X=&lt;executionDate&gt;]\n                            [-tz=&lt;zone&gt;] signal\n</code></pre>"},{"location":"commands/instructions/controls/signal/#options","title":"Options","text":"Option Long Version Description <code>-node=</code> <code>--node-id=</code> the node ID with the control to update <code>-control=</code> <code>--control-id=</code> the control ID to update <code>-x=</code> <code>--expiration=</code> a date to automatically transition the instruction to <code>Declined</code> if not already completed, like <code>2020-10-30</code> or <code>2020-10-30T12:45</code> <code>-X=</code> <code>--exec-at=</code> a date to defer instruction execution until, like <code>2020-10-30</code> or <code>2020-10-30T12:45</code> <code>-tz=</code> <code>--time-zone=</code> a time zone ID to treat all date options as, instead of the local time zone, like <code>Pacific/Auckland</code> or <code>-05:00</code> or <code>UTC</code>"},{"location":"commands/instructions/controls/signal/#parameters","title":"Parameters","text":"<p>Pass the signal name to send as the one and only parameter.</p>"},{"location":"commands/instructions/controls/signal/#output","title":"Output","text":"<p>A status message about the result of the instruction.</p>"},{"location":"commands/instructions/controls/signal/#examples","title":"Examples","text":"<p>Request a camera to take a snapshot:</p> Set component operating stateOutput <pre><code>s10k instructions controls signal --node-id 101 \\\n  --control-id camera/1 snapshot\n</code></pre> <pre><code>Control [camera/1] received [snapshot] signal.\n</code></pre>"},{"location":"commands/instructions/settings/update/","title":"Instructions Settings Update","text":"<p>Update the settings on a node. Use the <code>list-components</code> and <code>list-services</code> commands to discover the available services, and <code>settings view</code> to view the current settings on a service.</p>"},{"location":"commands/instructions/settings/update/#usage","title":"Usage","text":"<pre><code>s10k instructions settings update [-s=&lt;serviceId&gt;] [-c=&lt;componentId&gt;]\n                                -node=&lt;nodeId&gt; [&lt;setting&gt;...]\n</code></pre>"},{"location":"commands/instructions/settings/update/#options","title":"Options","text":"Option Long Version Description <code>-node=</code> <code>--node-id=</code> the node ID to list the control IDs for <code>-s=</code> <code>--service-id=</code> a service ID, or if <code>-c</code> provided the component instance ID, to view the settings for <code>-c=</code> <code>--component-id=</code> a component ID to list the available service instances for"},{"location":"commands/instructions/settings/update/#parameters","title":"Parameters","text":"<p>Provide either key and value setting pairs (requires the <code>--service-id</code> and optionally <code>--component-id</code> options) or the path to a CSV file, prefixed by <code>@@</code>.</p> <p>Alternatively you can provide CSV via standard input. When using CSV a setting can be removed by specifying an empty value for that setting key.</p>"},{"location":"commands/instructions/settings/update/#output","title":"Output","text":"<p>A result status message.</p>"},{"location":"commands/instructions/settings/update/#examples","title":"Examples","text":"<p>You can update one or more settings for a specific service on a node by providing <code>--service-id</code> and optionally <code>--component-id</code> options along with pairs of key and value setting parameters. The following example will update the <code>schedule</code> setting of a Control Datum Source component with ID <code>1</code> to \"every 30 seconds\":</p> Update schedule for component instance to 30s<pre><code>s10k instructions settings update --node-id 101 \\\n    --component-id net.solarnetwork.node.datum.control \\\n    --service-id 1 \\\n    schedule '0/30 * * * * *'\n</code></pre> <p>Alternatively you can update settings for a single component from a CSV file like this (extra columns are allowed and will be ignored). The following example updates two settings of a Control Datum Source component with ID <code>1</code>:</p> Update specific service settings from CSVCSV input <pre><code>s10k instructions settings update --node-id 101 \\\n    --component-id net.solarnetwork.node.datum.control \\\n    --service-id 1 \\\n    @@my-service.csv\n</code></pre> my-service.csv<pre><code>Key,Value\nschedule,0/30 * * * * *\njobService.multiDatumDataSource.eventModeValue,CaptureAndChange\n</code></pre> <p>You can also provide a full settings csv file to update the settings on an arbitrary number of service and component instances. The following example updates settings on two different components:</p> Update multiple services from CSVCSV input <pre><code>s10k instructions settings update --node-id 101 @@my-settings.csv\n</code></pre> my-settings.csv<pre><code>key,type,value\nnet.solarnetwork.node.datum.control.1,jobService.multiDatumDataSource.eventModeValue,CaptureAndChange\nnet.solarnetwork.node.datum.control.1,jobService.multiDatumDataSource.persistModeValue,Poll\nnet.solarnetwork.node.datum.control.1,schedule,0/30 * * * * *\nnet.solarnetwork.node.datum.control.FACTORY,1,1\nnet.solarnetwork.node.control.mock.Limit,controlId,limit/1\nnet.solarnetwork.node.control.mock.Limit,controlTypeValue,f\nnet.solarnetwork.node.control.mock.Limit,initialControlValue,0\nnet.solarnetwork.node.control.mock.FACTORY,Limit,Limit\n</code></pre> <p>The following example deletes some settings, by providing empty values in a CSV resource:</p> Update multiple services from CSVCSV input <pre><code>s10k instructions settings update --node-id 101 @@my-settings.csv\n</code></pre> my-settings.csv<pre><code>key,type,value\nnet.solarnetwork.node.control.mock.Limit,controlId,\nnet.solarnetwork.node.control.mock.Limit,controlTypeValue,\nnet.solarnetwork.node.control.mock.Limit,initialControlValue,\nnet.solarnetwork.node.control.mock.FACTORY,Limit,\n</code></pre>"},{"location":"commands/instructions/settings/view/","title":"Instructions Settings View","text":"<p>List the settings for a component instance or service on a node. Use the list-components and list-services commands to discover the available services.</p> <p>When generating <code>CSV</code> output, the <code>--full-csv</code> option will cause valid Settings CSV to be generated, which can be directly imported into SolarNode.</p> <p>Additionally the specification for a service can be shown, which is useful for applications dynamically discovering how to configure the settings.</p> <p>Info</p> <p>For more information about setting specifications, see the Developer Settings section of the SolarNode Handbook.</p>"},{"location":"commands/instructions/settings/view/#usage","title":"Usage","text":"<pre><code>s10k instructions settings view [-FS] -node=&lt;nodeId&gt; -s=&lt;serviceId&gt;\n                                [-c=&lt;componentId&gt;] [-mode=&lt;displayMode&gt;]\n</code></pre>"},{"location":"commands/instructions/settings/view/#options","title":"Options","text":"Option Long Version Description <code>-F</code> <code>--full-csv</code> when <code>CSV</code> output is specified, output full Settings CSV suitable for importing into SolarNode <code>-S</code> <code>--specification</code> show setting specifications instead of the current setting values; <code>JSON</code> output is implied <code>-node=</code> <code>--node-id=</code> the node ID to list the control IDs for <code>-s=</code> <code>--service-id=</code> a service ID, or if <code>-c</code> provided the component instance ID, to view the settings for <code>-c=</code> <code>--component-id=</code> a component ID to list the available service instances for <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code>"},{"location":"commands/instructions/settings/view/#output","title":"Output","text":"<p>A listing of service setting, or setting specification, records.</p>"},{"location":"commands/instructions/settings/view/#examples","title":"Examples","text":"<p>You can view the settings for a service on a node like this:</p> View service settingsPretty outputCSV outputJSON output <pre><code>s10k instructions settings view --node-id 101 \\\n  --service-id net.solarnetwork.node.metadata.json.JsonDatumMetadataService\n</code></pre> <pre><code>+---------------------------+-------+---------+\n| Key                       | Value | Default |\n+---------------------------+-------+---------+\n| updatePersistDelaySeconds | 2     |    true |\n+---------------------------+-------+---------+\n| updateThrottleSeconds     | 60    |    true |\n+---------------------------+-------+---------+\n</code></pre> <pre><code>Key,Value,Default\nupdatePersistDelaySeconds,2,true\nupdateThrottleSeconds,60,true\n</code></pre> <pre><code>[\n    {\n        \"key\": \"updatePersistDelaySeconds\",\n        \"value\": \"2\",\n        \"default\": true\n    },\n    {\n        \"key\": \"updateThrottleSeconds\",\n        \"value\": \"60\",\n        \"default\": true\n    }\n]\n</code></pre> <p>You can view the settings for a component instance with the <code>--component-id</code> option</p> View component instance settingsPretty outputCSV outputJSON output <pre><code>s10k instructions settings view --node-id 101 \\\n  --component-id net.solarnetwork.node.datum.control \\\n  --service-id 1\n</code></pre> <pre><code>+-----------------------------------------------------+--------------+---------+\n| Key                                                 | Value        | Default |\n+-----------------------------------------------------+--------------+---------+\n| schedule                                            | 0 * * * * ?  |    true |\n+-----------------------------------------------------+--------------+---------+\n| jobService.multiDatumDataSource.uid                 |              |    true |\n+-----------------------------------------------------+--------------+---------+\n| jobService.multiDatumDataSource.groupUid            |              |    true |\n+-----------------------------------------------------+--------------+---------+\n| jobService.multiDatumDataSource.controlIdRegexValue |              |    true |\n+-----------------------------------------------------+--------------+---------+\n| jobService.multiDatumDataSource.eventModeValue      | Change       |    true |\n+-----------------------------------------------------+--------------+---------+\n| jobService.multiDatumDataSource.persistModeValue    | PollAndEvent |   false |\n+-----------------------------------------------------+--------------+---------+\n</code></pre> <pre><code>Key,Value,Default\nschedule,0 * * * * ?,true\njobService.multiDatumDataSource.uid,,true\njobService.multiDatumDataSource.groupUid,,true\njobService.multiDatumDataSource.controlIdRegexValue,,true\njobService.multiDatumDataSource.eventModeValue,Change,true\njobService.multiDatumDataSource.persistModeValue,PollAndEvent,false\n</code></pre> <pre><code>[\n    [\n        {\n            \"key\": \"schedule\",\n            \"value\": \"0 * * * * ?\",\n            \"default\": true\n        },\n        {\n            \"key\": \"jobService.multiDatumDataSource.uid\",\n            \"value\": \"\",\n            \"default\": true\n        },\n        {\n            \"key\": \"jobService.multiDatumDataSource.groupUid\",\n            \"value\": \"\",\n            \"default\": true\n        },\n        {\n            \"key\": \"jobService.multiDatumDataSource.controlIdRegexValue\",\n            \"value\": \"\",\n            \"default\": true\n        },\n        {\n            \"key\": \"jobService.multiDatumDataSource.eventModeValue\",\n            \"value\": \"Change\",\n            \"default\": true\n        },\n        {\n            \"key\": \"jobService.multiDatumDataSource.persistModeValue\",\n            \"value\": \"PollAndEvent\",\n            \"default\": false\n        }\n    ]\n]\n</code></pre> <p>When generating <code>CSV</code> output, the <code>--full-csv</code> option will cause valid Settings CSV to be generated, which can be directly imported into SolarNode:</p> General full Settings CSVOutput <pre><code>s10k instructions settings view --node-id 101 \\\n  --component-id net.solarnetwork.node.datum.control \\\n  --service-id 1 \\\n  --display-mode CSV --full-csv\n</code></pre> <p>Note</p> <p>Any settings that are set to a system default value will be commented out with a leading <code>#</code> character. If you want to change that setting value, be sure to un-comment the line by removing the leading <code>#</code>.</p> <pre><code>Key,Type,Value\n#net.solarnetwork.node.datum.control.1,schedule,0 * * * * ?\n#net.solarnetwork.node.datum.control.1,jobService.multiDatumDataSource.uid,\n#net.solarnetwork.node.datum.control.1,jobService.multiDatumDataSource.groupUid,\n#net.solarnetwork.node.datum.control.1,jobService.multiDatumDataSource.controlIdRegexValue,\n#net.solarnetwork.node.datum.control.1,jobService.multiDatumDataSource.eventModeValue,Change\nnet.solarnetwork.node.datum.control.1,jobService.multiDatumDataSource.persistModeValue,PollAndEvent\nnet.solarnetwork.node.datum.control.FACTORY,1,1\n</code></pre> <p>You can view the setting specification for a service with the <code>--specification</code> option, to understand more about how each setting is configured:</p> View component instance setting specificationOutput <pre><code>s10k instructions settings view --node-id 101 \\\n  --component-id net.solarnetwork.node.datum.control \\\n  --service-id 1 \\\n  --specification\n</code></pre> <p>Note</p> <p>Note the output is always <code>JSON</code> when using <code>--specification</code>.</p> <pre><code>[\n    [\n        {\n            \"type\": \"net.solarnetwork.settings.CronExpressionSettingSpecifier\",\n            \"key\": \"schedule\",\n            \"defaultValue\": \"0 * * * * ?\",\n            \"descriptionArguments\": [\n                \"https://github.com/SolarNetwork/solarnetwork/wiki/SolarNode-Cron-Job-Syntax\"\n            ]\n        },\n        {\n            \"type\": \"net.solarnetwork.settings.TextFieldSettingSpecifier\",\n            \"key\": \"jobService.multiDatumDataSource.uid\"\n        },\n        {\n            \"type\": \"net.solarnetwork.settings.TextFieldSettingSpecifier\",\n            \"key\": \"jobService.multiDatumDataSource.groupUid\"\n        },\n        {\n            \"type\": \"net.solarnetwork.settings.TextFieldSettingSpecifier\",\n            \"key\": \"jobService.multiDatumDataSource.controlIdRegexValue\"\n        },\n        {\n            \"type\": \"net.solarnetwork.settings.MultiValueSettingSpecifier\",\n            \"key\": \"jobService.multiDatumDataSource.eventModeValue\",\n            \"defaultValue\": \"Change\",\n            \"valueTitles\": {\n                \"None\": \"Polled Only\",\n                \"Capture\": \"Sampled\",\n                \"Change\": \"Changed\",\n                \"CaptureAndChange\": \"Sampled and changed\"\n            }\n        },\n        {\n            \"type\": \"net.solarnetwork.settings.MultiValueSettingSpecifier\",\n            \"key\": \"jobService.multiDatumDataSource.persistModeValue\",\n            \"defaultValue\": \"Poll\",\n            \"valueTitles\": {\n                \"Poll\": \"Poll\",\n                \"PollAndEvent\": \"Poll and event\"\n            }\n        }\n    ]\n]\n</code></pre>"},{"location":"commands/nodes/","title":"Nodes Commands","text":"<p>The <code>nodes</code> group of commands deal with SolarNode related actions.</p>"},{"location":"commands/nodes/ids/","title":"Nodes IDs","text":"<p>List node IDs for the active credentials.</p>"},{"location":"commands/nodes/ids/#usage","title":"Usage","text":"<pre><code>s10k nodes ids [-mode=&lt;displayMode&gt;]\n</code></pre>"},{"location":"commands/nodes/ids/#options","title":"Options","text":"Option Long Version Description <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code>"},{"location":"commands/nodes/ids/#output","title":"Output","text":"<p>A listing of all available nodes.</p>"},{"location":"commands/nodes/ids/#examples","title":"Examples","text":"List nodesPretty OutputCSV OutputJSON Output <pre><code>s10k nodes ids\n</code></pre> <pre><code>+---------+\n| Node ID |\n+---------+\n|      64 |\n+---------+\n|      70 |\n+---------+\n|     101 |\n+---------+\n</code></pre> <pre><code>Node ID\n64\n70\n101\n</code></pre> <pre><code>[\n    64,\n    70,\n    101\n]\n</code></pre>"},{"location":"commands/nodes/list/","title":"Nodes List","text":"<p>List node information for the active credentials.</p>"},{"location":"commands/nodes/list/#usage","title":"Usage","text":"<pre><code>s10k nodes list [-mode=&lt;displayMode&gt;]\n</code></pre>"},{"location":"commands/nodes/list/#options","title":"Options","text":"Option Long Version Description <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code>"},{"location":"commands/nodes/list/#output","title":"Output","text":"<p>A listing of all available nodes.</p>"},{"location":"commands/nodes/list/#examples","title":"Examples","text":"List nodesPretty OutputCSV OutputJSON Output <pre><code>s10k nodes list\n</code></pre> <pre><code>+---------+-----------------------------+--------+---------+------------------+\n| Node ID | Created                     | Public | Country | Time Zone        |\n+---------+-----------------------------+--------+---------+------------------+\n|      64 | 2023-04-27T23:15:58.795135Z | true   | NZ      | Pacific/Auckland |\n+---------+-----------------------------+--------+---------+------------------+\n|      70 | 2024-05-16T19:02:54.174785Z | true   | NZ      | Pacific/Auckland |\n+---------+-----------------------------+--------+---------+------------------+\n|     101 | 2025-07-08T02:21:37.083163Z | true   | NZ      | Pacific/Auckland |\n+---------+-----------------------------+--------+---------+------------------+\n</code></pre> <pre><code>Node ID,Created,Public,Country,Time Zone\n64,2023-04-27T23:15:58.795135Z,true,NZ,Pacific/Auckland\n70,2024-05-16T19:02:54.174785Z,true,NZ,Pacific/Auckland\n101,2025-07-08T02:21:37.083163Z,true,NZ,Pacific/Auckland\n</code></pre> <pre><code>[\n    [ 664, \"2023-04-27 23:15:58.795135Z\", true, \"NZ\", \"Pacific/Auckland\" ],\n    [ 707, \"2024-05-16 19:02:54.174785Z\", true, \"NZ\", \"Pacific/Auckland\" ],\n    [ 1010, \"2025-07-08 02:21:37.083163Z\", true, \"NZ\", \"Pacific/Auckland\" ],\n    [ 1011, \"2025-07-08 03:23:26.007558Z\", true, \"NZ\", \"Pacific/Auckland\" ]\n]\n</code></pre>"},{"location":"commands/nodes/sources/","title":"Node Sources","text":"<p>List node sources matching a search filter.</p> <p>Info</p> <p>For more details on the SolarNetwork APIs used by this command, see the documentation for the /nodes/sources endpoint.</p>"},{"location":"commands/nodes/sources/#usage","title":"Usage","text":"<pre><code>s10k nodes sources [-node=nodeId[,nodeId...]]...\n                    [-source=sourceId[,sourceId...]]...\n                    [-min=&lt;minDate&gt;] [-max=&lt;maxDate&gt;]\n                    [-local] [-tz=&lt;zone&gt;]\n                    [-filter=&lt;metadataFilter&gt;]\n                    [-prop=propName[,propName...]]...\n                    [-i=propName[,propName...]]...\n                    [-a=propName[,propName...]]...\n                    [-s=propName[, propName...]]...\n                    [-mode=&lt;displayMode&gt;]\n</code></pre>"},{"location":"commands/nodes/sources/#options","title":"Options","text":"Option Long Version Description <code>-node=</code> <code>--node-id=</code> the node ID(s) to show metadata for <code>-node=</code> <code>--node-id=</code> the node ID(s) to show sources for (exclusive to <code>-loc</code>) <code>-source=</code> <code>--source=</code> the source ID(s) to show sources for <code>-min=</code> <code>--min-date=</code> a minimum date to limit results to, like <code>2020-10-30</code> or <code>2020-10-30T12:45</code> <code>-max=</code> <code>--max-date=</code> a maximum date (exclusive) to limit results to, in same form as <code>-min</code> <code>-local</code> <code>--local-dates</code> treat the min/max dates as \"node local\" dates, instead of UTC (or the local time zone when <code>-tz</code> used) <code>-tz=</code> <code>--time-zone=</code> a time zone ID to treat the min/max dates as, instead of the local time zone, like <code>Pacific/Auckland</code> or <code>-05:00</code> or <code>UTC</code> <code>-filter=</code> <code>--filter=</code> an optional datum stream metadata filter to limit results to <code>-prop=</code> <code>--property=</code> restrict results to metadata that has this property (instantaneous, accumulating, or status); multiple properties combine with logical \"or\" <code>-i=</code> <code>--instantaneous=</code> restrict results to metadata that has this instantaneous property; multiple properties combine with logical \"and\" <code>-a=</code> <code>--accumulating=</code> restrict results to metadata that has this accumulating property; multiple properties combine with logical \"and\" <code>-s=</code> <code>--status=</code> restrict results to metadata that has this status property; multiple properties combine with logical \"and\" <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code>; note that <code>PRETTY</code> is not suitable for large result sets"},{"location":"commands/nodes/sources/#output","title":"Output","text":"<p>A listing of all matching node sources.</p>"},{"location":"commands/nodes/sources/#examples","title":"Examples","text":"<p>List all available sources:</p> List all sourcesPretty OutputCSV OutputJSON Output <pre><code>s10k nodes sources\n</code></pre> <pre><code>+---------+---------------+\n| Node ID | Source ID     |\n+---------+---------------+\n|      64 | /meter/1      |\n+---------+---------------+\n|      64 | /meter/2      |\n+---------+---------------+\n|      64 | /test/solcast |\n+---------+---------------+\n|      70 | meter/1       |\n+---------+---------------+\n|     101 | con/1         |\n+---------+---------------+\n|     101 | con/pcm       |\n+---------+---------------+\n|     101 | dnp3/client/a |\n+---------+---------------+\n|     101 | gen/1         |\n+---------+---------------+\n|     101 | pcm/limit     |\n+---------+---------------+\n|     101 | power/limit   |\n+---------+---------------+\n|     101 | switch/1      |\n+---------+---------------+\n</code></pre> <pre><code>Node ID,Source ID\n64,/meter/1\n64,/meter/2\n64,/test/solcast\n70,meter/1\n101,con/1\n101,con/pcm\n101,dnp3/client/a\n101,gen/1\n101,pcm/limit\n101,power/limit\n101,switch/1\n</code></pre> <pre><code>[\n    {\n        \"kind\" : \"n\",\n        \"objectId\" : 64,\n        \"sourceId\" : \"/meter/1\"\n    },\n    {\n        \"kind\" : \"n\",\n        \"objectId\" : 64,\n        \"sourceId\" : \"/meter/2\"\n    },\n    {\n        \"kind\" : \"n\",\n        \"objectId\" : 64,\n        \"sourceId\" : \"/test/solcast\"\n    },\n    {\n        \"kind\" : \"n\",\n        \"objectId\" : 70,\n        \"sourceId\" : \"meter/1\"\n    },\n    {\n        \"kind\" : \"n\",\n        \"objectId\" : 101,\n        \"sourceId\" : \"con/1\"\n    },\n    {\n        \"kind\" : \"n\",\n        \"objectId\" : 101,\n        \"sourceId\" : \"con/pcm\"\n    },\n    {\n        \"kind\" : \"n\",\n        \"objectId\" : 101,\n        \"sourceId\" : \"dnp3/client/a\"\n    },\n    {\n        \"kind\" : \"n\",\n        \"objectId\" : 101,\n        \"sourceId\" : \"gen/1\"\n    },\n    {\n        \"kind\" : \"n\",\n        \"objectId\" : 101,\n        \"sourceId\" : \"pcm/limit\"\n    },\n    {\n        \"kind\" : \"n\",\n        \"objectId\" : 101,\n        \"sourceId\" : \"power/limit\"\n    },\n    {\n        \"kind\" : \"n\",\n        \"objectId\" : 101,\n        \"sourceId\" : \"switch/1\"\n    }\n]\n</code></pre> <p>Show sources that have both <code>watts</code> instantaneous and <code>wattHours</code> accumulating properties and have posted datum since <code>2025-08-01</code>:</p> <pre><code>s10k datum sources \\\n  --instantaneous watts \\\n  --accumulating wattHours \\\n  --min-date 2025-08-01\n</code></pre>"},{"location":"commands/nodes/meta/","title":"Nodes Meta Commands","text":"<p>The <code>nodes meta</code> commands deal with SolarNode metadata, which is metadata associated with a specific node. Node metadata is both published and consumed by nodes. For example nodes publish metadata about themselves (like hardware architecture and version); node metadata can be easily used in node expressions, which makes it a good candidate for node-level parameters that do not change too frequently.</p>"},{"location":"commands/nodes/meta/csv-get/","title":"Nodes Meta CSV-Get","text":"<p>Extract CSV from node metadata at a specific metadata key path. CSV metadata is often used for tariff schedules in SolarNode, such as tariff schedule expressions.</p>"},{"location":"commands/nodes/meta/csv-get/#usage","title":"Usage","text":"<pre><code>s10k nodes meta csv-get [-mode=&lt;displayMode&gt;] -node=&lt;nodeId&gt;\n                        [-path=&lt;metadataPath&gt;]\n</code></pre>"},{"location":"commands/nodes/meta/csv-get/#options","title":"Options","text":"Option Long Version Description <code>-node=</code> <code>--node-id=</code> the node ID to get metadata from <code>-path=</code> <code>--path=</code> the key path with the CSV data to extract <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code>"},{"location":"commands/nodes/meta/csv-get/#output","title":"Output","text":"<p>The CSV data, formatted according to the <code>--display-mode</code> option.</p>"},{"location":"commands/nodes/meta/csv-get/#examples","title":"Examples","text":"<p>Show CSV data in the default formatting:</p> Show CSV with pretty formattingOutput <pre><code>s10k nodes meta csv-get --node-id 101 --path /pm/cpd/schedule\n</code></pre> <pre><code>+-----------------+-----+---------+------+-----------------+\n|           Month | Day | Weekday | Time | cpdPeriodActive |\n+-----------------+-----+---------+------+-----------------+\n| Jan-Apr,Oct-Dec |     |         |      |               0 |\n+-----------------+-----+---------+------+-----------------+\n|         May-Sep |     |         |      |               1 |\n+-----------------+-----+---------+------+-----------------+\n</code></pre> <p>The same data can be output as CSV as well:</p> Show CSV with CSV formattingOutput <pre><code>s10k nodes meta csv-get --node-id 101 --path /pm/cpd/schedule \\\n     --display-mode CSV\n</code></pre> <pre><code>Month,Day,Weekday,Time,cpdPeriodActive\n\"Jan-Apr,Oct-Dec\",,,,0\nMay-Sep,,,,1\n</code></pre> <p>The same data can be output as JSON as well:</p> Show CSV with JSON formattingOutput <pre><code>s10k nodes meta csv-get --node-id 101 --path /pm/cpd/schedule \\\n     --display-mode JSON\n</code></pre> <pre><code>[\n  [ \"Month\", \"Day\", \"Weekday\", \"Time\", \"cpdPeriodActive\" ],\n  [ \"Jan-Apr,Oct-Dec\", null, null, null, \"0\" ],\n  [ \"May-Sep\", null, null, null, \"1\" ]\n]\n</code></pre>"},{"location":"commands/nodes/meta/csv-set/","title":"Nodes Meta CSV-Set","text":"<p>Save CSV data to node metadata at a specific metadata key path. CSV metadata is often used for tariff schedules in SolarNode, such as tariff schedule expressions.</p>"},{"location":"commands/nodes/meta/csv-set/#usage","title":"Usage","text":"<pre><code>s10k nodes meta csv-set [-s] [-mode=&lt;displayMode&gt;] -node=&lt;nodeId&gt;\n                        [-path=&lt;metadataPath&gt;] [&lt;csv&gt;]\n</code></pre>"},{"location":"commands/nodes/meta/csv-set/#options","title":"Options","text":"Option Long Version Description <code>-node=</code> <code>--node-id=</code> the node ID to get metadata from <code>-path=</code> <code>--path=</code> the key path with the CSV data to extract <code>-mode=</code> <code>--display-mode=</code> if <code>--verbose</code> then the format to display the saved data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code> <code>-s</code> <code>--string</code> encode the CSV as a JSON string, intead of JSON arrays"},{"location":"commands/nodes/meta/csv-set/#output","title":"Output","text":"<p>A success message. If the <code>--verbose</code> option specified then this will be followed by a pretty-printed copy of the saved CSV data, formatted according to the <code>--display-mode</code> option.</p>"},{"location":"commands/nodes/meta/csv-set/#string-mode","title":"String mode","text":"<p>The <code>--string</code> option lets you encode the CSV data as a metadata string value, rather than the default method of encoding it as arrays. For example take this sample CSV data:</p> <pre><code>Month,Day,Weekday,Time,cpdPeriodActive\n\"Jan-Apr,Oct-Dec\",,,,0\nMay-Sep,,,,1\n</code></pre> <p>Here is how it would be saved as metadata at the key path <code>/pm/cpd/schedule</code> normally, and with the <code>--string</code> option:</p> Normal CSV metadataString CSV metadata <pre><code>{\n    \"pm\" : {\n        \"cpd\" : {\n            \"schedule\" : [\n                [ \"Month\", \"Day\", \"Weekday\", \"Time\", \"cpdPeriodActive\" ],\n                [ \"Jan-Apr,Oct-Dec\", null, null, null, \"0\" ],\n                [ \"May-Sep\", null, null, null, \"1\" ]\n            ]\n        }\n    }\n}\n</code></pre> <pre><code>{\n    \"pm\" : {\n        \"cpd\" : {\n            \"schedule\" : \"Month,Day,Weekday,Time,cpdPeriodActive\\r\\n\\\"Jan-Apr,Oct-Dec\\\",,,,0\\r\\nMay-Sep,,,,1\"\n        }\n    }\n}\n</code></pre>"},{"location":"commands/nodes/meta/csv-set/#examples","title":"Examples","text":"<p>The data to save can be provided directly as a command argument, for example:</p> CSV as command argument<pre><code>s10k nodes meta csv-set --node-id 101 \\\n  --path /pm/cpd/schedule 'Key,Value\\nA,B'\n</code></pre> <p>A file with the data can be referenced using <code>@@</code> followed by the file path:</p> CSV as a file<pre><code>s10k nodes meta csv-set --node-id 101 \\\n  --path /pm/cpd/schedule @@/path/to/data.csv\n</code></pre> <p>The data can be read from standard input, like this:</p> CSV read from standard input<pre><code>s10k nodes meta csv-set --node-id 101 \\\n  --path /pm/cpd/schedule &lt;/path/to/data.csv\n</code></pre> <p>Similarly, the metadata content can be piped to the command, like this:</p> ExampleOutput Metadata piped from standard input<pre><code>cat /path/to/data.csv |s10k --verbose --profile demo nodes meta csv-set \\\n  --node-id 101 --path /pm/cpd/schedule --display-mode JSON\n</code></pre> <pre><code>CSV saved to to path [/pm/cpd/schedule].\n[\n  [ \"Month\", \"Day\", \"Weekday\", \"Time\", \"cpdPeriodActive\" ],\n  [ \"Jan-Apr,Oct-Dec\", null, null, null, \"0\" ],\n  [ \"May-Sep\", null, null, null, \"1\" ]\n]\n</code></pre>"},{"location":"commands/nodes/meta/delete/","title":"Nodes Meta Delete","text":"<p>Delete all metadata associated with a node.</p>"},{"location":"commands/nodes/meta/delete/#usage","title":"Usage","text":"<pre><code>s10k nodes meta delete -node=&lt;nodeId&gt;\n</code></pre>"},{"location":"commands/nodes/meta/delete/#options","title":"Options","text":"Option Long Version Description <code>-node=</code> <code>--node-id=</code> the node ID to delete metadata from"},{"location":"commands/nodes/meta/delete/#output","title":"Output","text":"<p>A success message.</p>"},{"location":"commands/nodes/meta/delete/#examples","title":"Examples","text":"Delete metadata<pre><code>s10k nodes meta delete --node-id 101\n</code></pre>"},{"location":"commands/nodes/meta/list/","title":"Nodes Meta List","text":"<p>Show metadata matching a search filter.</p>"},{"location":"commands/nodes/meta/list/#usage","title":"Usage","text":"<pre><code>s10k nodes meta list [-filter=&lt;filter&gt;] -node=nodeId[,nodeId...]\n                     [-node=nodeId[,nodeId...]]...\n</code></pre>"},{"location":"commands/nodes/meta/list/#options","title":"Options","text":"Option Long Version Description <code>-node=</code> <code>--node-id=</code> the node ID(s) to show metadata for <code>-filter=</code> <code>--filter=</code> an optional metadata filter to limit results to"},{"location":"commands/nodes/meta/list/#output","title":"Output","text":"<p>A listing of all matching node metadata records.</p>"},{"location":"commands/nodes/meta/list/#examples","title":"Examples","text":"<p>You can show exactly the metadata for a single node like this:</p> Show metadata for one nodeOutput <pre><code>s10k nodes meta list --node-id 101\n</code></pre> <pre><code>Property Value\n------------------------------------\nnodeId   101\ncreated  2025-08-28T23:22:00.237150Z\nupdated  2025-08-29T05:20:06.322691Z\n{\n    \"m\" : {\n        \"limit\" : 123,\n    }\n}\n</code></pre> <p>You can show multiple node metadatas by providing multiple <code>--node-id</code> options or as a comma-delimited list:</p> Show metadata for multiple nodesOutput <pre><code># using multiple options\ns10k nodes meta list --node-id 101 --node-id 102\n\n# or the same thing, using a comma-delimited list\ns10k nodes meta list --node-id 101,102\n</code></pre> <pre><code>Property Value\n------------------------------------\nnodeId   101\ncreated  2025-08-28T23:22:00.237150Z\nupdated  2025-08-29T05:20:06.322691Z\n{\n    \"m\" : {\n        \"limit\" : 123\n    }\n}\n\nProperty Value\n------------------------------------\nnodeId   102\ncreated  2025-08-28T12:22:00.433152Z\nupdated  2025-08-28T18:11:21.627128Z\n{\n    \"m\" : {\n        \"limit\" : 234\n    }\n}\n</code></pre> <p>You can restrict the returned metadata using a metadata filter, for example to show only the metadata where <code>limit</code> is greater than <code>200</code>:</p> Show metadata for one nodeOutput <pre><code>s10k nodes meta list --node-id 101,102 --filter '(m/limit&gt;200)'\n</code></pre> <pre><code>Property Value\n------------------------------------\nnodeId   102\ncreated  2025-08-28T12:22:00.433152Z\nupdated  2025-08-28T18:11:21.627128Z\n{\n    \"m\" : {\n        \"limit\" : 234\n    }\n}\n</code></pre>"},{"location":"commands/nodes/meta/save/","title":"Nodes Meta Save","text":"<p>Save metadata associated with a node.</p>"},{"location":"commands/nodes/meta/save/#usage","title":"Usage","text":"<pre><code>s10k nodes meta save [-r] -node=&lt;nodeId&gt; [&lt;metadata&gt;]\n</code></pre>"},{"location":"commands/nodes/meta/save/#options","title":"Options","text":"Option Long Version Description <code>-node=</code> <code>--node-id=</code> the node ID to save metadata to <code>-r</code> <code>--replace</code> replace all existing metadata, rather than add/update"},{"location":"commands/nodes/meta/save/#output","title":"Output","text":"<p>A success message, followed by a pretty-printed copy of the saved metadata.</p>"},{"location":"commands/nodes/meta/save/#metadata-structure","title":"Metadata structure","text":"<p>SolarNetwork defines metadata as two tree-like structures along with a set of tags. First there is the <code>m</code> structure that defines a simple key-value pair of simple values (like strings, booleans, and numbers). Then there is the <code>pm</code> structure that defines an arbitrarily-nested tree structure. Then there is the <code>t</code> set of tags. An example looks like this:</p> <pre><code>{\n  \"m\" : {\n    \"limit\" : 10000,\n    \"group\" : \"alpha\"\n  },\n  \"pm\" : {\n    \"os\" : {\n      \"arch\" : \"aarch64\",\n      \"name\" : \"Linux\",\n      \"version\" : \"6.1.21-v8+\"\n    }\n  },\n  \"t\" : [\"west\", \"red\"]\n}\n</code></pre>"},{"location":"commands/nodes/meta/save/#examples","title":"Examples","text":"<p>The metadata to save can be provided directly as a command argument, for example:</p> Metadata as command argument<pre><code>s10k nodes meta save --node-id 101 '{\"m\":{\"limit\":123}}'\n</code></pre> <p>A file with the metadata can be referenced using <code>@@</code> followed by the file path:</p> Metadata as a file<pre><code>s10k nodes meta save --node-id 101 @@/path/to/metadata.json\n</code></pre> <p>The metadata content can be read from standard input, like this:</p> Metadata read from standard input<pre><code>s10k nodes meta save --node-id 101 &lt;/path/to/metadata.json\n</code></pre> <p>Similarly, the metadata content can be piped to the command, like this:</p> ExampleOutput Metadata piped from standard input<pre><code>jq -n --argjson  limit 123 '{\"m\":{\"limit\":$limit}}' \\\n  |s10k nodes meta save --node-id 101\n</code></pre> <pre><code>Node metadata added:\n{\n    \"m\" : {\n        \"limit\" : 123\n    }\n}\n</code></pre>"},{"location":"commands/sec-tokens/","title":"Sec-Tokens Commands","text":"<p>The <code>sec-tokens</code> group of commands deal with SolarNetwork security token related actions.</p> <p>Note</p> <p>All <code>sec-tokens</code> commands require a User security token to operate.</p>"},{"location":"commands/sec-tokens/create/","title":"Sec-Tokens Create","text":"<p>Create a new security token.</p>"},{"location":"commands/sec-tokens/create/#usage","title":"Usage","text":"<pre><code>s10k sec-tokens create [-r] -t=&lt;tokenType&gt; [-n=&lt;name&gt;]\n                        [-D=&lt;description&gt;] [-node=nodeId[,nodeId...]]...\n                        [-source=sourceId[,sourceId...]]...\n                        [-N=metaPath[,metaPath...]]...\n                        [-U=metaPath[,metaPath...]]...\n                        [-A=path[,path...]]...\n                        [-exp=&lt;expirationDate&gt;] [-tz=&lt;zone&gt;]\n                        [-mode=&lt;displayMode&gt;]\n                        [-agg=aggregation |\n                            --aggregation=aggregation[,aggregation...]...]\n                        [-loc=precision |\n                            --location-precision=precision[,precision...]...]\n</code></pre>"},{"location":"commands/sec-tokens/create/#options","title":"Options","text":"Option Long Version Description <code>-A=</code> <code>--api-path=</code> an API path(s) to restrict access to (wildcard patterns allowed) <code>-agg=</code> <code>--min-aggregation=</code> a minimum aggregation to restrict access to <code>--aggregation=</code> an aggregation to restrict access to <code>-D=</code> <code>--description=</code> a description for the token <code>-exp=</code> <code>--expiration-date=</code> an expiration date for the token,like <code>2020-10-30</code> or <code>2020-10-30T12:45</code> <code>-loc=</code> <code>--min-location-precision=</code> a minimum location precision to restrict access to <code>--location-precision=</code> a location precision to restrict access to <code>-n=</code> <code>--name=</code> a brief name for the token <code>-N=</code> <code>--node-metadata-path=</code> node metadata paths to restrict access to (wildcard patterns allowed) <code>-node=</code> <code>--node-id=</code> node ID(s) to restrict access to <code>-r</code> <code>--refresh-allowed</code> allow signing keys for the token to be refreshed <code>-source=</code> <code>--source-id=</code> source ID(s) to restrict access to <code>-t=</code> <code>--type=</code> the type of token to create, one of <code>ReadNodeData</code> or <code>User</code> <code>-tz=</code> <code>--time-zone=</code> a time zone ID to treat expiration date as instead of the local time zone, like <code>Pacific/Auckland</code> or <code>-05:00</code> or <code>UTC</code> <code>-U=</code> <code>--user-metadata-path=</code> user metadata paths to restrict access to (wildcard patterns allowed) <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code>"},{"location":"commands/sec-tokens/create/#output","title":"Output","text":"<p>The new security token, with its associated secret.</p> <p>Warning</p> <p>You must copy the token secret to a safe place, as SolarNetwork will not show you its value ever again.</p>"},{"location":"commands/sec-tokens/create/#examples","title":"Examples","text":"<p>Create a basic <code>ReadNodeData</code> token with no policy restrictions:</p> Create basic tokenPretty OutputCSV OutputJSON Output <pre><code>s10k sec-tokens create --type ReadNodeData\n</code></pre> <pre><code>+----------------------+---------------------------+--------------------------------+---------+--------------+------+-------------+--------+\n| Token ID             | Token Secret              | Created                        | User ID | Type         | Name | Description | Policy |\n+----------------------+---------------------------+--------------------------------+---------+--------------+------+-------------+--------+\n| ZCv5FUjlTlIQGjigLhSW | i.3R5qMQ-4sKg8uUV0XoxBY5y | 2025-09-29T03:51:32.388051375Z |     123 | ReadNodeData |      |             |        |\n+----------------------+---------------------------+--------------------------------+---------+--------------+------+-------------+--------+\n</code></pre> <pre><code>Token ID,Token Secret,Created,User ID,Type,Name,Description,Policy\nLqc8Z_KzpD8.L0_em0Au,QlmQCrZaemdXmUNISggGF7ed,2025-09-29T03:52:13.248686631Z,123,ReadNodeData,,,\n</code></pre> <pre><code>{\n    \"id\" : \"WoRxAChcFZ.x7s2zT5Y6\",\n    \"authSecret\" : \"zcqVddxS0YTr6rzAtSA.Wq.x0tRzZL\",\n    \"created\" : \"2025-09-29 04:13:52.673034405Z\",\n    \"userId\" : 123,\n    \"status\" : \"Active\",\n    \"type\" : \"ReadNodeData\",\n    \"expired\" : false\n}\n</code></pre> <p>Create a <code>User</code> token with a name, description, and various policy restrictions:</p> Create token with policyPretty OutputCSV OutputJSON Output <pre><code>s10k sec-tokens create --type User --name 'Reporting: region 1' \\\n    --description 'Allow access to region 1 for reporting team.' \\\n    --node-id 100,101 --source-id '/REGION1/**' \\\n    --min-aggregation Hour \\\n    --refresh-allowed\n</code></pre> <pre><code>+----------------------+----------------------------+--------------------------------+---------+------+---------------------+----------------------------------------------+------------------------------------+\n| Token ID             | Token Secret               | Created                        | User ID | Type | Name                | Description                                  | Policy                             |\n+----------------------+----------------------------+--------------------------------+---------+------+---------------------+----------------------------------------------+------------------------------------+\n| kF67p6g30eUXQICUgzQf | PDX3VpOKmrc58HOOqUOv3HTmv0 | 2025-09-29T04:23:20.302916611Z |     123 | User | Reporting: region 1 | Allow access to region 1 for reporting team. | {                                  |\n|                      |                            |                                |         |      |                     |                                              |   \"nodeIds\" : [ 100, 101 ],        |\n|                      |                            |                                |         |      |                     |                                              |   \"sourceIds\" : [ \"/REGION1/**\" ], |\n|                      |                            |                                |         |      |                     |                                              |   \"minAggregation\" : \"Hour\",       |\n|                      |                            |                                |         |      |                     |                                              |   \"refreshAllowed\" : true          |\n|                      |                            |                                |         |      |                     |                                              | }                                  |\n+----------------------+----------------------------+--------------------------------+---------+------+---------------------+----------------------------------------------+------------------------------------+\n</code></pre> <pre><code>Token ID,Token Secret,Created,User ID,Type,Name,Description,Policy\nvWLOCdFTaB8IeF6__bl5,HQyeON_XND0YgkYlMHGz.7qPoYlP,2025-09-29T04:25:03.335116516Z,123,User,Reporting: region 1,Allow access to region 1 for reporting team.,\"{\n  \"\"nodeIds\"\" : [ 100, 101 ],\n  \"\"sourceIds\"\" : [ \"\"/REGION1/**\"\" ],\n  \"\"minAggregation\"\" : \"\"Hour\"\",\n  \"\"refreshAllowed\"\" : true\n}\"\n</code></pre> <pre><code>{\n    \"id\" : \"0a.vDUsIQFDM.pOShkqf\",\n    \"authSecret\" : \"mvBMxQukn1TsvmyjxQb6lWEZyebUWp\",\n    \"created\" : \"2025-09-29 04:25:43.884356539Z\",\n    \"userId\" : 123,\n    \"name\" : \"Reporting: region 1\",\n    \"description\" : \"Allow access to region 1 for reporting team.\",\n    \"status\" : \"Active\",\n    \"type\" : \"User\",\n    \"expired\" : false,\n    \"policy\" : {\n        \"nodeIds\" : [ 100, 101 ],\n        \"sourceIds\" : [ \"/REGION1/**\" ],\n        \"minAggregation\" : \"Hour\",\n        \"refreshAllowed\" : true\n    }\n}\n</code></pre>"},{"location":"commands/sec-tokens/delete/","title":"Sec-Tokens Delete","text":"<p>Delete a security token.</p>"},{"location":"commands/sec-tokens/delete/#usage","title":"Usage","text":"<pre><code>s10k sec-tokens delete -id=tokenId\n</code></pre>"},{"location":"commands/sec-tokens/delete/#options","title":"Options","text":"Option Long Version Description <code>-id=</code> <code>--identifier=</code> the token ID to delete"},{"location":"commands/sec-tokens/delete/#output","title":"Output","text":"<p>A success message.</p>"},{"location":"commands/sec-tokens/delete/#examples","title":"Examples","text":"Delete tokenOutput <pre><code>s10k sec-tokens delete --identifier ZCv5FUjlTlIQGjigLhSW\n</code></pre> <pre><code>Security token deleted.\n</code></pre>"},{"location":"commands/sec-tokens/list/","title":"Sec-Tokens List","text":"<p>List security tokens matching a search filter.</p>"},{"location":"commands/sec-tokens/list/#usage","title":"Usage","text":"<pre><code>s10k sec-tokens list [-id=tokenId[,tokenId...]]... [-t=&lt;tokenType&gt;]\n                    [-mode=&lt;displayMode&gt;] [-a | -d]\n</code></pre>"},{"location":"commands/sec-tokens/list/#options","title":"Options","text":"Option Long Version Description <code>-a</code> <code>--active</code> show only active tokens <code>-d</code> <code>--disabled</code> show only disabled tokens <code>-id=</code> <code>--identifier=</code> the ID(s) of the tokens to show <code>-t=</code> <code>--type=</code> the type of token to show, one of <code>ReadNodeData</code> or <code>User</code> <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code>"},{"location":"commands/sec-tokens/list/#output","title":"Output","text":"<p>A listing of security tokens matching the search criteria.</p>"},{"location":"commands/sec-tokens/list/#examples","title":"Examples","text":"<p>List all <code>ReadNodeData</code> tokens:</p> List <code>ReadNodeData</code> tokensPretty OutputCSV OutputJSON Output <pre><code>s10k sec-tokens list --type ReadNodeData\n</code></pre> <pre><code>+----------------------+-----------------------------+---------+--------------+----------+----------------+-------------------------------------+------------------------------------------------------+\n| Token ID             | Created                     | User ID | Type         | Status   | Name           | Description                         | Policy                                               |\n+----------------------+-----------------------------+---------+--------------+----------+----------------+-------------------------------------+------------------------------------------------------+\n| Lqc8Z_KzpD8.L0_em0Au | 2025-09-29T03:52:13.248687Z |     123 | ReadNodeData | Active   |                |                                     |                                                      |\n+----------------------+-----------------------------+---------+--------------+----------+----------------+-------------------------------------+------------------------------------------------------+\n| zLgbyhRvcMhQ83QRFJqh | 2025-09-29T04:05:46.562370Z |     123 | ReadNodeData | Disabled | Student access | Allow access to school system data. | {                                                    |\n|                      |                             |         |              |          |                |                                     |   \"nodeIds\" : [ 100, 101 ],                          |\n|                      |                             |         |              |          |                |                                     |   \"sourceIds\" : [ \"mock/**\", \"test/**\" ],            |\n|                      |                             |         |              |          |                |                                     |   \"minAggregation\" : \"Hour\",                         |\n|                      |                             |         |              |          |                |                                     |   \"minLocationPrecision\" : \"PostalCode\",             |\n|                      |                             |         |              |          |                |                                     |   \"nodeMetadataPaths\" : [ \"/pm/test/**\" ],           |\n|                      |                             |         |              |          |                |                                     |   \"userMetadataPaths\" : [ \"/pm/account/public/**\" ], |\n|                      |                             |         |              |          |                |                                     |   \"notAfter\" : 1759143600000,                        |\n|                      |                             |         |              |          |                |                                     |   \"refreshAllowed\" : true                            |\n|                      |                             |         |              |          |                |                                     | }                                                    |\n+----------------------+-----------------------------+---------+--------------+----------+----------------+-------------------------------------+------------------------------------------------------+\n</code></pre> <pre><code>Token ID,Created,User ID,Type,Status,Name,Description,Policy\nLqc8Z_KzpD8.L0_em0Au,2025-09-29T03:52:13.248687Z,123,ReadNodeData,Active,,,\nzLgbyhRvcMhQ83QRFJqh,2025-09-29T04:05:46.562370Z,123,ReadNodeData,Disabled,Student access,Allow access to school system data.,\"{\n  \"\"nodeIds\"\" : [ 100, 101 ],\n  \"\"sourceIds\"\" : [ \"\"mock/**\"\", \"\"test/**\"\" ],\n  \"\"minAggregation\"\" : \"\"Hour\"\",\n  \"\"minLocationPrecision\"\" : \"\"PostalCode\"\",\n  \"\"nodeMetadataPaths\"\" : [ \"\"/pm/test/**\"\" ],\n  \"\"userMetadataPaths\"\" : [ \"\"/pm/account/public/**\"\" ],\n  \"\"notAfter\"\" : 1759143600000,\n  \"\"refreshAllowed\"\" : true\n}\"\n</code></pre> <pre><code>[\n    {\n        \"id\" : \"Lqc8Z_KzpD8.L0_em0Au\",\n        \"created\" : \"2025-09-29 03:52:13.248687Z\",\n        \"userId\" : 123,\n        \"status\" : \"Active\",\n        \"type\" : \"ReadNodeData\",\n        \"expired\" : false\n    },\n    {\n        \"id\" : \"zLgbyhRvcMhQ83QRFJqh\",\n        \"created\" : \"2025-09-29 04:05:46.56237Z\",\n        \"userId\" : 123,\n        \"name\" : \"Student access\",\n        \"description\" : \"Allow access to school system data.\",\n        \"status\" : \"Disabled\",\n        \"type\" : \"ReadNodeData\",\n        \"expired\" : false,\n        \"policy\" : {\n            \"nodeIds\" :   [ 100, 101 ],\n            \"sourceIds\" :   [ \"mock/**\", \"test/**\" ],\n            \"minAggregation\" : \"Hour\",\n            \"minLocationPrecision\" : \"PostalCode\",\n            \"nodeMetadataPaths\" :   [ \"/pm/test/**\" ],\n            \"userMetadataPaths\" :   [ \"/pm/account/public/**\" ],\n            \"notAfter\" : 1759143600000,\n            \"refreshAllowed\" : true\n        }\n    }\n]\n</code></pre>"},{"location":"commands/sec-tokens/update/","title":"Sec-Tokens Update","text":"<p>Update a security token.</p>"},{"location":"commands/sec-tokens/update/#usage","title":"Usage","text":"<pre><code>s10k sec-tokens update [-rR] -id=tokenId [-n=&lt;name&gt;]\n                        [-D=&lt;description&gt;] [-node=nodeId[,nodeId...]]...\n                        [-source=sourceId[,sourceId...]]...\n                        [-N=metaPath[,metaPath...]]...\n                        [-U=metaPath[,metaPath...]]...\n                        [-A=path[,path...]]...\n                        [-exp=&lt;expirationDate&gt;] [-tz=&lt;zone&gt;]\n                        [-mode=&lt;displayMode&gt;]\n                        [-a | -d]\n                        [-agg=aggregation |\n                            --aggregation=aggregation[,aggregation...]...]\n                        [-loc=precision |\n                            --location-precision=precision[,precision...]...]\n</code></pre>"},{"location":"commands/sec-tokens/update/#options","title":"Options","text":"Option Long Version Description <code>-a</code> <code>--active</code> make the token active <code>-A=</code> <code>--api-path=</code> an API path(s) to restrict access to (wildcard patterns allowed) <code>-agg=</code> <code>--min-aggregation=</code> a minimum aggregation to restrict access to <code>--aggregation=</code> an aggregation to restrict access to <code>-d</code> <code>--disabled</code> make the token disabled <code>-D=</code> <code>--description=</code> a description for the token <code>-exp=</code> <code>--expiration-date=</code> an expiration date for the token,like <code>2020-10-30</code> or <code>2020-10-30T12:45</code> <code>-id=</code> <code>--identifier=</code> the ID of the token to update <code>-loc=</code> <code>--min-location-precision=</code> a minimum location precision to restrict access to <code>--location-precision=</code> a location precision to restrict access to <code>-n=</code> <code>--name=</code> a brief name for the token <code>-N=</code> <code>--node-metadata-path=</code> node metadata paths to restrict access to (wildcard patterns allowed) <code>-node=</code> <code>--node-id=</code> node ID(s) to restrict access to <code>-r</code> <code>--refresh-allowed</code> allow signing keys for the token to be refreshed <code>-R</code> <code>--replace</code> replace the security policy, instead of updating (adding to) the policy <code>-source=</code> <code>--source-id=</code> source ID(s) to restrict access to <code>-t=</code> <code>--type=</code> the type of token to create, one of <code>ReadNodeData</code> or <code>User</code> <code>-tz=</code> <code>--time-zone=</code> a time zone ID to treat expiration date as instead of the local time zone, like <code>Pacific/Auckland</code> or <code>-05:00</code> or <code>UTC</code> <code>-U=</code> <code>--user-metadata-path=</code> user metadata paths to restrict access to (wildcard patterns allowed) <code>-mode=</code> <code>--display-mode=</code> the format to display the data as, one of <code>CSV</code>, <code>JSON</code>, or <code>PRETTY</code>; defaults to <code>PRETTY</code>"},{"location":"commands/sec-tokens/update/#output","title":"Output","text":"<p>The updated security token.</p>"},{"location":"commands/sec-tokens/update/#examples","title":"Examples","text":"<p>Update the name and description of a token:</p> Update token namePretty OutputCSV OutputJSON Output <pre><code>s10k sec-tokens update --identifier hNAdH.aXHaEqFossMwT8 \\\n    --name 'Student access' \\\n    --description 'Allow access to school system data.'\n</code></pre> <pre><code>+----------------------+-----------------------------+---------+--------------+--------+----------------+-------------------------------------+--------+\n| Token ID             | Created                     | User ID | Type         | Status | Name           | Description                         | Policy |\n+----------------------+-----------------------------+---------+--------------+--------+----------------+-------------------------------------+--------+\n| hNAdH.aXHaEqFossMwT8 | 2025-09-29T03:52:43.281061Z |     123 | ReadNodeData | Active | Student access | Allow access to school system data. |        |\n+----------------------+-----------------------------+---------+--------------+--------+----------------+-------------------------------------+--------+\n</code></pre> <pre><code>Token ID,Created,User ID,Type,Status,Name,Description,Policy\nhNAdH.aXHaEqFossMwT8,2025-09-29T03:52:43.281061Z,123,ReadNodeData,Active,Student access,Allow access to school system data.,\n</code></pre> <pre><code>{\n    \"id\" : \"hNAdH.aXHaEqFossMwT8\",\n    \"created\" : \"2025-09-29 03:52:43.281061Z\",\n    \"userId\" : 123,\n    \"name\" : \"Student access\",\n    \"description\" : \"Allow access to school system data.\",\n    \"status\" : \"Active\",\n    \"type\" : \"ReadNodeData\",\n    \"expired\" : false\n}\n</code></pre> <p>Add policy restrictions, preserving existing restrictions:</p> Update token policyPretty OutputCSV OutputJSON Output <pre><code>s10k sec-tokens update --identifier kF67p6g30eUXQICUgzQf \\\n    --node-id 107,164 \\\n    --source-id '/REGION2/**'\n</code></pre> <pre><code>+----------------------+-----------------------------+---------+------+--------+---------------------+----------------------------------------------+---------------------------------------------------+\n| Token ID             | Created                     | User ID | Type | Status | Name                | Description                                  | Policy                                            |\n+----------------------+-----------------------------+---------+------+--------+---------------------+----------------------------------------------+---------------------------------------------------+\n| kF67p6g30eUXQICUgzQf | 2025-09-29T04:23:20.302917Z |     123 | User | Active | Reporting: region 1 | Allow access to region 1 for reporting team. | {                                                 |\n|                      |                             |         |      |        |                     |                                              |   \"nodeIds\" : [ 100, 101, 107, 164 ],             |\n|                      |                             |         |      |        |                     |                                              |   \"sourceIds\" : [ \"/REGION1/**\", \"/REGION2/**\" ], |\n|                      |                             |         |      |        |                     |                                              |   \"minAggregation\" : \"Hour\",                      |\n|                      |                             |         |      |        |                     |                                              |   \"refreshAllowed\" : true                         |\n|                      |                             |         |      |        |                     |                                              | }                                                 |\n+----------------------+-----------------------------+---------+------+--------+---------------------+----------------------------------------------+---------------------------------------------------+\n</code></pre> <pre><code>Token ID,Created,User ID,Type,Status,Name,Description,Policy\nkF67p6g30eUXQICUgzQf,2025-09-29T04:23:20.302917Z,123,User,Active,Reporting: region 1,Allow access to region 1 for reporting team.,\"{\n\"\"nodeIds\"\" : [ 100, 101, 107, 164 ],\n\"\"sourceIds\"\" : [ \"\"/REGION2/**\"\", \"\"/REGION1/**\"\" ],\n\"\"minAggregation\"\" : \"\"Hour\"\",\n\"\"refreshAllowed\"\" : true\n}\"\n</code></pre> <pre><code>{\n    \"id\" : \"kF67p6g30eUXQICUgzQf\",\n    \"created\" : \"2025-09-29 04:23:20.302917Z\",\n    \"userId\" : 123,\n    \"name\" : \"Reporting: region 1\",\n    \"description\" : \"Allow access to region 1 for reporting team.\",\n    \"status\" : \"Active\",\n    \"type\" : \"User\",\n    \"expired\" : false,\n    \"policy\" : {\n        \"nodeIds\" : [ 100, 101, 107, 164 ],\n        \"sourceIds\" : [ \"/REGION2/**\", \"/REGION1/**\" ],\n        \"minAggregation\" : \"Hour\",\n        \"refreshAllowed\" : true\n    }\n}\n</code></pre> <p>Replace policy restrictions, discarding existing restrictions, with the <code>--replace</code> option:</p> Update token policyPretty OutputCSV OutputJSON Output <pre><code>s10k sec-tokens update --identifier kF67p6g30eUXQICUgzQf \\\n    --node-id 107,164 \\\n    --source-id '/REGION2/**' \\\n    --replace\n</code></pre> <pre><code>+----------------------+-----------------------------+---------+------+--------+---------------------+----------------------------------------------+-----------------------------------+\n| Token ID             | Created                     | User ID | Type | Status | Name                | Description                                  | Policy                            |\n+----------------------+-----------------------------+---------+------+--------+---------------------+----------------------------------------------+-----------------------------------+\n| kF67p6g30eUXQICUgzQf | 2025-09-29T04:23:20.302917Z |     123 | User | Active | Reporting: region 1 | Allow access to region 1 for reporting team. | {                                 |\n|                      |                             |         |      |        |                     |                                              |   \"nodeIds\" : [ 107, 164 ],       |\n|                      |                             |         |      |        |                     |                                              |   \"sourceIds\" : [ \"/REGION2/**\" ] |\n|                      |                             |         |      |        |                     |                                              | }                                 |\n+----------------------+-----------------------------+---------+------+--------+---------------------+----------------------------------------------+-----------------------------------+\n</code></pre> <pre><code>Token ID,Created,User ID,Type,Status,Name,Description,Policy\nkF67p6g30eUXQICUgzQf,2025-09-29T04:23:20.302917Z,123,User,Active,Reporting: region 1,Allow access to region 1 for reporting team.,\"{\n\"\"nodeIds\"\" : [ 107, 164 ],\n\"\"sourceIds\"\" : [ \"\"/REGION2/**\"\" ]\n}\"\n</code></pre> <pre><code>{\n    \"id\" : \"kF67p6g30eUXQICUgzQf\",\n    \"created\" : \"2025-09-29 04:23:20.302917Z\",\n    \"userId\" : 123,\n    \"name\" : \"Reporting: region 1\",\n    \"description\" : \"Allow access to region 1 for reporting team.\",\n    \"status\" : \"Active\",\n    \"type\" : \"User\",\n    \"expired\" : false,\n    \"policy\" : {\n        \"nodeIds\" : [ 107, 164 ],\n        \"sourceIds\" : [ \"/REGION2/**\" ]\n    }\n}\n</code></pre>"}]}